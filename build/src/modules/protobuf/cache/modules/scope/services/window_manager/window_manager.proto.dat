ccopy_reg
_reconstructor
p1
(chob.proto
Package
p2
c__builtin__
object
p3
NtRp4
(dp5
S'packages'
p6
(dp7
S''
g4
ssS'group'
p8
S'File'
p9
sS'name'
p10
S''
sS'_lookup'
p11
(dp12
sS'doc'
p13
NsS'messages'
p14
(lp15
g1
(chob.proto
Message
p16
g3
NtRp17
(dp18
S'parent'
p19
NsS'comment'
p20
Nsg8
S'Message'
p21
sg10
S'WindowInfo'
p22
sS'internal_id'
p23
Nsg13
g1
(chob.proto
DocBlock
p24
g3
NtRp25
(dp26
S'text'
p27
S'TODO: We probably want a lot more information about each window, like URL, shortcut\n      icon, etc.\n'
p28
sbsS'fieldMap'
p29
(dp30
sS'children'
p31
(lp32
sS'is_extension'
p33
I00
sS'extensions'
p34
(lp35
sS'iparent'
p36
g4
sS'items'
p37
(lp38
g1
(chob.proto
Field
p39
g3
NtRp40
(dp41
g20
Nsg8
S'Field'
p42
sg10
S'windowID'
p43
sS'default'
p44
Nsg13
NsS'default_text'
p45
S'None'
p46
sS'number'
p47
I1
sS'q'
g1
(chob.proto
QuantifierType
p48
g3
NtRp49
(dp50
S'id'
p51
I1
sg10
S'required'
p52
sbsg36
g17
sg37
(lp53
sS'cpp'
p54
g1
(ccppgen.cpp
CppFieldBuilder
p55
g3
NtRp56
(dp57
S'_ext'
p58
NsS'field'
p59
g40
sS'options'
p60
g1
(ccppgen.cpp
CppBuildOptions
p61
g3
NtRp62
(dp63
S'moduleType'
p64
S'modules'
p65
sS'moduleName'
p66
S'scope'
p67
sS'config'
p68
(iConfigParser
SafeConfigParser
p69
(dp70
S'_optcre'
p71
cre
_compile
p72
(S'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
p73
I0
tRp74
sS'_defaults'
p75
ccollections
OrderedDict
p76
((ltRp77
sS'_sections'
p78
g76
((lp79
(lp80
S'options'
p81
ag76
((lp82
(lp83
S'__name__'
p84
ag81
aa(lp85
S'_package'
p86
aS'cpp_prefix: OpScope;'
p87
aatRp88
aa(lp89
S'Manager'
p90
ag76
((lp91
(lp92
g84
ag90
aa(lp93
S'shared_fields'
p94
aS'OpScopeIDTable<DocumentManager> frame_ids;\nOpScopeIDTable<FramesDocument> document_ids;\nOpScopeIDTable<unsigned> resource_ids;'
p95
aa(lp96
S'includes'
p97
aS'modules/scope/src/scope_idtable.h;'
p98
aatRp99
aa(lp100
S'TestService.options'
p101
ag76
((lp102
(lp103
g84
ag101
aa(lp104
S'testservice'
p105
aS'cpp_file: scope_test_service;\ncpp_class: OtScopeTestService;\ncpp_feature: SELFTEST;\ncpp_defines: SCOPE_SUPPORT;'
p106
aa(lp107
S'_field'
p108
aS'cpp_method: *'
p109
aa(lp110
S'enumdata.type.bool'
p111
aS'cpp_name: OP_TYPE_BOOL'
p112
aa(lp113
S'enumdata.type.number'
p114
aS'cpp_name: OP_TYPE_NUMBER'
p115
aa(lp116
S'enumdata.type.object'
p117
aS'cpp_name: OP_TYPE_OBJECT'
p118
aa(lp119
S'mixedbytetype.type1'
p120
aS'cpp_datatype: ByteBuffer;'
p121
aa(lp122
S'mixedbytetype.type2'
p123
aS'cpp_datatype: OpData;'
p124
aa(lp125
S'mixedbytetype.type3'
p126
aS'cpp_datatype: ByteBuffer;'
p127
aa(lp128
S'mixedbytetype.type4'
p129
aS'cpp_datatype: OpData;'
p130
aa(lp131
S'mixedbytetype.type5list'
p132
aS'cpp_datatype: ByteBuffer;'
p133
aa(lp134
S'mixedbytetype.type6list'
p135
aS'cpp_datatype: OpData;'
p136
aa(lp137
S'mixedstringtype.type1'
p138
aS'cpp_datatype: OpString;'
p139
aa(lp140
S'mixedstringtype.type2'
p141
aS'cpp_datatype: TempBuffer;'
p142
aa(lp143
S'mixedstringtype.type3'
p144
aS'cpp_datatype: OpString;'
p145
aa(lp146
S'mixedstringtype.type4'
p147
aS'cpp_datatype: TempBuffer;'
p148
aa(lp149
S'mixedstringtype.type5list'
p150
aS'cpp_datatype: OpString;'
p151
aa(lp152
S'mixedstringtype.type6list'
p153
aS'cpp_datatype: TempBuffer;'
p154
aatRp155
aa(lp156
S'ScopeService.options'
p157
ag76
((lp158
(lp159
g84
ag157
aa(lp160
S'scopeservice'
p161
aS'cpp_file: scope_service;\ncpp_class: OpScopeService;\ncpp_feature: SCOPE_SUPPORT;\ncpp_instance: false;'
p162
aa(lp163
S'_package'
p164
aS'cpp_prefix: Op;'
p165
aatRp166
aa(lp167
S'Scope.options'
p168
ag76
((lp169
(lp170
g84
ag168
aa(lp171
S'scope'
p172
aS'cpp_file: scope_protocol_service;\ncpp_class: OpScopeProtocolService;\ncpp_feature: SCOPE_SUPPORT;\ncpp_is_essential: true;'
p173
aa(lp174
S'service.version'
p175
aS'cpp_method: SetStringPtr'
p176
aa(lp177
S'messageinfolist.messagelist'
p178
aS'cpp_method: AppendNew'
p179
aa(lp180
S'commandinfo.name'
p181
aS'cpp_method: SetStringPtr'
p182
aa(lp183
S'eventinfo.name'
p184
aS'cpp_method: SetStringPtr'
p185
aa(lp186
S'messageinfo.name'
p187
aS'cpp_method: SetStringPtr'
p188
aa(lp189
S'enumlist.enumlist'
p190
aS'cpp_method: AppendNew'
p191
aa(lp192
S'enumlist.enum.valuelist'
p193
aS'cpp_method: AppendNew'
p194
aatRp195
aa(lp196
S'Selftest.options'
p197
ag76
((lp198
(lp199
g84
ag197
aa(lp200
S'selftest'
p201
aS'cpp_file: scope_selftest;\ncpp_class: OpScopeSelftest;\ncpp_feature: SELFTEST;'
p202
aatRp203
aa(lp204
S'HttpLogger.options'
p205
ag76
((lp206
(lp207
g84
ag205
aa(lp208
S'httplogger'
p209
aS'cpp_file: scope_http_logger;\ncpp_class: OpScopeHttpLogger;\ncpp_feature: SCOPE_HTTP_LOGGER;'
p210
aa(lp211
S'header.header'
p212
aS'cpp_method: SetStringPtr'
p213
aatRp214
aa(lp215
S'I18n.options'
p216
ag76
((lp217
(lp218
g84
ag216
aa(lp219
S'i18n'
p220
aS'cpp_file: scope_i18n;\ncpp_class: OpScopeI18n;\ncpp_feature: SCOPE_I18N;'
p221
aa(lp222
S'string.str'
p223
aS'cpp_method: GetRef'
p224
aatRp225
aa(lp226
S'Overlay.options'
p227
ag76
((lp228
(lp229
g84
ag227
aa(lp230
S'overlay'
p231
aS'cpp_file: scope_overlay;\ncpp_class: OpScopeOverlay;\ncpp_feature: SCOPE_OVERLAY;'
p232
aatRp233
aa(lp234
S'ResourceManager.options'
p235
ag76
((lp236
(lp237
g84
ag235
aa(lp238
S'resourcemanager'
p239
aS'cpp_file: scope_resource_manager;\ncpp_class: OpScopeResourceManager;\ncpp_feature: SCOPE_RESOURCE_MANAGER;\ncpp_construct: &frame_ids, &document_ids, &resource_ids;'
p240
aa(lp241
S'urlload.url'
p242
aS'cpp_method: GetRef'
p243
aa(lp244
S'urlfinished.characterencoding'
p245
aS'cpp_method: GetRef'
p246
aa(lp247
S'urlfinished.mimetype'
p248
aS'cpp_method: GetRef'
p249
aa(lp250
S'request.method'
p251
aS'cpp_method: GetRef'
p252
aa(lp253
S'requestheader.raw'
p254
aS'cpp_method: SetStringPtr'
p255
aa(lp256
S'responseheader.raw'
p257
aS'cpp_method: SetStringPtr'
p258
aa(lp259
S'header.name'
p260
aS'cpp_method: SetStringPtr, SetUniStringPtr'
p261
aa(lp262
S'header.value'
p263
aS'cpp_method: SetStringPtr, SetUniStringPtr'
p264
aa(lp265
S'content.stringdata'
p266
aS'cpp_method: GetRef'
p267
aa(lp268
S'content.characterencoding'
p269
aS'cpp_method: GetRef'
p270
aa(lp271
S'content.mimetype'
p272
aS'cpp_method: GetRef'
p273
aa(lp274
S'resourcedata.url'
p275
aS'cpp_method: GetRef'
p276
aa(lp277
S'resourcedata.mimetype'
p278
aS'cpp_method: GetRef'
p279
aa(lp280
S'resourcedata.characterencoding'
p281
aS'cpp_method: GetRef'
p282
aa(lp283
S'requestdata.mimetype'
p284
aS'cpp_method: GetRef'
p285
aa(lp286
S'requestdata.characterencoding'
p287
aS'cpp_method: GetRef'
p288
aatRp289
aa(lp290
S'ConsoleLogger.options'
p291
ag76
((lp292
(lp293
g84
ag291
aa(lp294
S'consolelogger'
p295
aS'cpp_file: scope_console_logger;\ncpp_class: OpScopeConsoleLogger;\ncpp_feature: SCOPE_CONSOLE_LOGGER;'
p296
aa(lp297
S'consolemessage.source'
p298
aS'cpp_method: SetStringPtr'
p299
aa(lp300
S'consolemessage.severity'
p301
aS'cpp_method: SetStringPtr'
p302
aatRp303
aa(lp304
S'CookieManager.options'
p305
ag76
((lp306
(lp307
g84
ag305
aa(lp308
S'cookiemanager'
p309
aS'cpp_file: scope_cookie_manager;\ncpp_class: OpScopeCookieManager;\ncpp_feature: SCOPE_COOKIE_MANAGER;'
p310
aa(lp311
S'cookielist.cookielist'
p312
aS'cpp_method: AppendNew'
p313
aa(lp314
S'cookie.name'
p315
aS'cpp_method: SetStringPtr'
p316
aa(lp317
S'cookie.value'
p318
aS'cpp_method: SetStringPtr'
p319
aa(lp320
S'cookie.path'
p321
aS'cpp_method: SetStringPtr'
p322
aa(lp323
S'cookie.expires'
p324
aS'cpp_method: GetRef'
p325
aa(lp326
S'cookie.domain'
p327
aS'cpp_method: SetStringPtr, SetUniStringPtr'
p328
aatRp329
aa(lp330
S'Core.options'
p331
ag76
((lp332
(lp333
g84
ag331
aa(lp334
S'core'
p335
aS'cpp_file: scope_core;\ncpp_class: OpScopeCore;\ncpp_feature: SCOPE_CORE'
p336
aa(lp337
S'browserinformation.binarypath'
p338
aS'cpp_method: GetRef'
p339
aa(lp340
S'browserinformation.operatingsystem'
p341
aS'cpp_method: SetUniStringPtr'
p342
aa(lp343
S'browserinformation.useragent'
p344
aS'cpp_method: SetStringPtr'
p345
aa(lp346
S'browserinformation.product'
p347
aS'cpp_method: SetStringPtr'
p348
aatRp349
aa(lp350
S'DocumentManager.options'
p351
ag76
((lp352
(lp353
g84
ag351
aa(lp354
S'documentmanager'
p355
aS'cpp_file: scope_document_manager;\ncpp_class: OpScopeDocumentManager;\ncpp_feature: SCOPE_DOCUMENT_MANAGER;\ncpp_construct: &frame_ids, &document_ids, &resource_ids;'
p356
aa(lp357
S'documentlist.documentlist'
p358
aS'cpp_method: GetRef, AppendNew'
p359
aa(lp360
S'document.url'
p361
aS'cpp_method: GetRef'
p362
aatRp363
aa(lp364
S'Prefs.options'
p365
ag76
((lp366
(lp367
g84
ag365
aa(lp368
S'prefs'
p369
aS'cpp_file: scope_prefs;\ncpp_class: OpScopePrefs;\ncpp_feature: SCOPE_PREFS;'
p370
aa(lp371
S'pref.value'
p372
aS'cpp_method: GetRef'
p373
aa(lp374
S'prefvalue.value'
p375
aS'cpp_method: GetRef'
p376
aa(lp377
S'pref.preflist'
p378
aS'cpp_method: AppendNew'
p379
aa(lp380
S'pref.section'
p381
aS'cpp_method: SetStringPtr'
p382
aa(lp383
S'pref.key'
p384
aS'cpp_method: SetStringPtr'
p385
aatRp386
aa(lp387
S'Profiler.options'
p388
ag76
((lp389
(lp390
g84
ag388
aa(lp391
S'profiler'
p392
aS'cpp_hfile: modules/scope/src/scope_profiler.h;\ncpp_class: OpScopeProfiler;\ncpp_feature: SCOPE_PROFILER;\ncpp_construct: &frame_ids;'
p393
aa(lp394
S'scriptthreadevaluationevent.eventname'
p395
aS'cpp_method: GetRef'
p396
aa(lp397
S'profiler.stopprofiler'
p398
aS'cpp_response: deferred'
p399
aa(lp400
S'profiler.getevents'
p401
aS'cpp_response: deferred'
p402
aatRp403
aa(lp404
S'Exec.options'
p405
ag76
((lp406
(lp407
g84
ag405
aa(lp408
S'exec'
p409
aS'cpp_file: scope_exec;\ncpp_class: OpScopeExec;\ncpp_feature: SCOPE_EXEC_SUPPORT;'
p410
aa(lp411
S'actioninfolist.actioninfo.name'
p412
aS'cpp_method: SetStringPtr, SetUniStringPtr'
p413
aa(lp414
S'exec.setupscreenwatcher'
p415
aS'cpp_response: deferred'
p416
aatRp417
aa(lp418
S'EcmascriptDebugger.options'
p419
ag76
((lp420
(lp421
g84
ag419
aa(lp422
S'ecmascriptdebugger'
p423
aS'cpp_file: scope_ecmascript_debugger;\ncpp_class: ES_ScopeDebugFrontend;\ncpp_feature: SCOPE_ECMASCRIPT_DEBUGGER;'
p424
aa(lp425
S'evalresult.type'
p426
aS'cpp_method: GetRef, SetUniStringPtr'
p427
aa(lp428
S'objectinfo.property.type'
p429
aS'cpp_method: GetRef, SetUniStringPtr'
p430
aa(lp431
S'consoleloginfo.valuelist'
p432
aS'cpp_method: AppendNew'
p433
aa(lp434
S'runtimeinfo.description'
p435
aS'cpp_method: GetRef'
p436
aa(lp437
S'functioncallstartinginfo.argumentlist'
p438
aS'cpp_method: AppendNew'
p439
aa(lp440
S'functioncallcompletedinfo.argumentlist'
p441
aS'cpp_method: AppendNew'
p442
aa(lp443
S'value.str'
p444
aS'cpp_method: GetRef'
p445
aa(lp446
S'nodeinfo.eventlistenerlist'
p447
aS'cpp_method: AppendNew'
p448
aa(lp449
S'eventlistener.eventtype'
p450
aS'cpp_method: SetStringPtr, SetUniStringPtr'
p451
aa(lp452
S'functionpositionlist.functionpositionlist'
p453
aS'cpp_method: AppendNew'
p454
aa(lp455
S'eventtargets.targetlist'
p456
aS'cpp_method: AppendNew'
p457
aa(lp458
S'eventtarget.eventlistenerlist'
p459
aS'cpp_method: AppendNew'
p460
aa(lp461
S'ecmascriptdebugger.eval'
p462
aS'cpp_response: deferred'
p463
aa(lp464
S'ecmascriptdebugger.examineobjects'
p465
aS'cpp_response: deferred'
p466
aatRp467
aa(lp468
S'UrlPlayer.options'
p469
ag76
((lp470
(lp471
g84
ag469
aa(lp472
S'urlplayer'
p473
aS'cpp_file: urlplayer_command;\ncpp_class: OpScopeUrlPlayer;\ncpp_feature: SCOPE_URL_PLAYER;'
p474
aatRp475
aa(lp476
S'WidgetManager.options'
p477
ag76
((lp478
(lp479
g84
ag477
aa(lp480
S'widgetmanager'
p481
aS'cpp_file: scope_widget_manager;\ncpp_class: OpScopeWidgetManager;\ncpp_feature: SCOPE_WIDGET_MANAGER_SUPPORT;'
p482
aa(lp483
S'settings.localelist'
p484
aS'cpp_method: AppendNew'
p485
aa(lp486
S'widgetlist.widgetlist'
p487
aS'cpp_method: AppendNew'
p488
aa(lp489
S'widget.widgetid'
p490
aS'cpp_method: GetRef'
p491
aa(lp492
S'widget.properties.filename'
p493
aS'cpp_method: GetRef'
p494
aa(lp495
S'widget.properties.disableddetails'
p496
aS'cpp_method: GetRef'
p497
aa(lp498
S'widget.properties.downloadurl'
p499
aS'cpp_method: GetRef'
p500
aa(lp501
S'widget.featurelist'
p502
aS'cpp_method: AppendNew'
p503
aa(lp504
S'widget.instancelist'
p505
aS'cpp_method: AppendNew'
p506
aa(lp507
S'widget.iconlist'
p508
aS'cpp_method: AppendNew'
p509
aa(lp510
S'widget.preferencelist'
p511
aS'cpp_method: AppendNew'
p512
aa(lp513
S'widget.licenselist'
p514
aS'cpp_method: AppendNew'
p515
aa(lp516
S'widget.networkaccesslist'
p517
aS'cpp_method: AppendNew'
p518
aa(lp519
S'widget.namespace'
p520
aS'cpp_method: GetRef'
p521
aa(lp522
S'widget.securityaccesslist'
p523
aS'cpp_method: AppendNew,GetRef'
p524
aa(lp525
S'widget.securityaccess.protocollist'
p526
aS'cpp_method: AppendNew'
p527
aa(lp528
S'widget.securityaccess.hostlist'
p529
aS'cpp_method: AppendNew'
p530
aa(lp531
S'widget.securityaccess.portlist'
p532
aS'cpp_method: AppendNew'
p533
aa(lp534
S'widget.securityaccess.pathlist'
p535
aS'cpp_method: AppendNew'
p536
aa(lp537
S'widget.userjslist'
p538
aS'cpp_method: AppendNew'
p539
aa(lp540
S'widget.feature.paramlist'
p541
aS'cpp_method: AppendNew'
p542
aa(lp543
S'widget.server.serverurl'
p544
aS'cpp_method: GetRef'
p545
aa(lp546
S'widgetuninstalled.widgetid'
p547
aS'cpp_method: GetRef'
p548
aa(lp549
S'widgetmanager.checkwidgetupdate'
p550
aS'cpp_response: deferred'
p551
aa(lp552
S'widgetmanager.installwidgetbyurl'
p553
aS'cpp_response: deferred'
p554
aa(lp555
S'widgetmanager.updatewidget'
p556
aS'cpp_response: deferred'
p557
aa(lp558
S'widgetmanager.uninstallwidget'
p559
aS'cpp_response: deferred'
p560
aatRp561
aa(lp562
S'WindowManager.options'
p563
ag76
((lp564
(lp565
g84
ag563
aa(lp566
S'windowmanager'
p567
aS'cpp_file: scope_window_manager;\ncpp_class: OpScopeWindowManager;\ncpp_feature: SCOPE_WINDOW_MANAGER_SUPPORT;'
p568
aatRp569
aa(lp570
S'Ecmascript.options'
p571
ag76
((lp572
(lp573
g84
ag571
aa(lp574
S'ecmascript'
p575
aS'cpp_file: scope_ecmascript;\ncpp_class: OpScopeEcmascript;\ncpp_feature: SCOPE_ECMASCRIPT;'
p576
aa(lp577
S'ecmascript.eval'
p578
aS'cpp_response: deferred'
p579
aa(lp580
S'ecmascript.examineobjects'
p581
aS'cpp_response: deferred'
p582
aa(lp583
S'objectlist.prototypelist'
p584
aS'cpp_method: AppendNew'
p585
aa(lp586
S'prototypechain.objectlist'
p587
aS'cpp_method: AppendNew'
p588
aa(lp589
S'object.classname'
p590
aS'cpp_method: SetStringPtr, SetUniStringPtr'
p591
aa(lp592
S'object.propertylist'
p593
aS'cpp_method: AppendNew'
p594
aa(lp595
S'evalresult.status.no_memory'
p596
aS'cpp_name: STATUS_OOM'
p597
aatRp598
aatRp599
sS'_dict'
p600
g76
sbsbsbsS'default_object'
p601
NsS'message'
p602
NsS'type'
p603
g1
(chob.proto
ProtoType
p604
g3
NtRp605
(dp606
g51
I2
sg10
S'uint32'
p607
sbsg60
g1
(chob.proto
Options
p608
c__builtin__
dict
p609
(dp610
S'cpp_exttype'
p611
g1
(chob.proto
OptionValue
p612
g3
NtRp613
(dp614
S'raw'
p615
S''
sS'value'
p616
S''
sg13
NsbsS'cpp_datatype'
p617
g1
(g612
g3
NtRp618
(dp619
g615
S''
sg616
S''
sg13
NsbstRp620
(dp621
S'ordered'
p622
(lp623
g611
ag617
asbsbag1
(g39
g3
NtRp624
(dp625
g20
Nsg8
g42
sg10
S'title'
p626
sg44
Nsg13
Nsg45
S'None'
p627
sg47
I2
sS'q'
g49
sg36
g17
sg37
(lp628
sg54
g1
(g55
g3
NtRp629
(dp630
g58
Nsg59
g624
sg60
g62
sbsg601
Nsg602
Nsg603
g1
(g604
g3
NtRp631
(dp632
g51
I14
sg10
S'string'
p633
sbsg60
g1
(g608
g609
(dp634
g611
g1
(g612
g3
NtRp635
(dp636
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp637
(dp638
g615
S''
sg616
S''
sg13
NsbstRp639
(dp640
g622
(lp641
g611
ag617
asbsbag1
(g39
g3
NtRp642
(dp643
g20
Nsg8
g42
sg10
S'windowType'
p644
sg44
Nsg13
g1
(g24
g3
NtRp645
(dp646
g27
S'\nTODO: Some of these are obsolete, like "ad". Figure out which ones should really be present.\n\nType is one of:\n- "normal"\n- "download"\n- "cache"\n- "plugins"\n- "history"\n- "help"\n- "mail_view"\n- "mail_compose"\n- "newsfeed_view"\n- "ad"\n- "im_view"\n- "p2p_view"\n- "brand_view"\n- "print_selection"\n- "js_console"\n- "gadget"\n- "controller"\n- "info"\n- "dialog"\n- "thumbnail"\n- "normal_hidden"\n- "devtools"\n'
p647
sbsg45
S'None'
p648
sg47
I3
sS'q'
g49
sg36
g17
sg37
(lp649
sg54
g1
(g55
g3
NtRp650
(dp651
g58
Nsg59
g642
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp652
g611
g1
(g612
g3
NtRp653
(dp654
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp655
(dp656
g615
S''
sg616
S''
sg13
NsbstRp657
(dp658
g622
(lp659
g611
ag617
asbsbag1
(g39
g3
NtRp660
(dp661
g20
Nsg8
g42
sg10
S'openerID'
p662
sg44
Nsg13
g1
(g24
g3
NtRp663
(dp664
g27
S'The `window-id` of the window who opened the window in question,\nor 0 if it was not opened by another window.\n'
p665
sbsg45
S'None'
p666
sg47
I4
sS'q'
g49
sg36
g17
sg37
(lp667
sg54
g1
(g55
g3
NtRp668
(dp669
g58
Nsg59
g660
sg60
g62
sbsg601
Nsg602
Nsg603
g605
sg60
g1
(g608
g609
(dp670
g611
g1
(g612
g3
NtRp671
(dp672
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp673
(dp674
g615
S''
sg616
S''
sg13
NsbstRp675
(dp676
g622
(lp677
g611
ag617
asbsbag1
(g39
g3
NtRp678
(dp679
g20
Nsg8
g42
sg10
S'extensionName'
p680
sg44
Nsg13
g1
(g24
g3
NtRp681
(dp682
g27
S"The name of the extension if window type is 'gadget'.\n\n@since 2.2\n"
p683
sbsg45
S'None'
p684
sg47
I5
sS'q'
g1
(g48
g3
NtRp685
(dp686
g51
I2
sg10
S'optional'
p687
sbsg36
g17
sg37
(lp688
sg54
g1
(g55
g3
NtRp689
(dp690
g58
Nsg59
g678
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp691
g611
g1
(g612
g3
NtRp692
(dp693
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp694
(dp695
g615
S''
sg616
S''
sg13
NsbstRp696
(dp697
g622
(lp698
g611
ag617
asbsbag1
(g39
g3
NtRp699
(dp700
g20
Nsg8
g42
sg10
S'isPrivate'
p701
sg44
Nsg13
g1
(g24
g3
NtRp702
(dp703
g27
S'true if the window is in Privacy Mode.\n@since 2.3\n'
p704
sbsg45
S'None'
p705
sg47
I6
sS'q'
g685
sg36
g17
sg37
(lp706
sg54
g1
(g55
g3
NtRp707
(dp708
g58
Nsg59
g699
sg60
g62
sbsg601
Nsg602
Nsg603
g1
(g604
g3
NtRp709
(dp710
g51
I11
sg10
S'bool'
p711
sbsg60
g1
(g608
g609
(dp712
g611
g1
(g612
g3
NtRp713
(dp714
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp715
(dp716
g615
S''
sg616
S''
sg13
NsbstRp717
(dp718
g622
(lp719
g611
ag617
asbsbasg54
g1
(ccppgen.cpp
CppMessageBuilder
p720
g3
NtRp721
(dp722
S'opMessageID'
p723
NsS'opMessageAlloc'
p724
I1
sS'_needsOpMessage'
p725
NsS'_typedef'
p726
NsS'_klass'
p727
NsS'_opMessageType'
p728
NsS'_opMessage'
p729
Nsg602
g17
sg60
g62
sbsS'enums'
p730
(lp731
sg60
g1
(g608
g609
(dp732
S'cpp_opmessage'
p733
g1
(g612
g3
NtRp734
(dp735
g615
S''
sg616
S''
sg13
NsbsS'cpp_opmessage_prefix'
p736
g1
(g612
g3
NtRp737
(dp738
g615
S''
sg616
S''
sg13
NsbsS'cpp_opmessage_suffix'
p739
g1
(g612
g3
NtRp740
(dp741
g615
S''
sg616
S''
sg13
NsbsS'cpp_opmessage_allocate'
p742
g1
(g612
g3
NtRp743
(dp744
g615
S'new'
p745
sg616
g745
sg13
NsbstRp746
(dp747
g622
(lp748
g733
ag736
ag739
ag742
asbsS'fields'
p749
(lp750
g40
ag624
ag642
ag660
ag678
ag699
asbag1
(g16
g3
NtRp751
(dp752
g19
Nsg20
Nsg8
g21
sg10
S'WindowID'
p753
sg23
Nsg13
Nsg29
(dp754
sg31
(lp755
sg33
I00
sg34
(lp756
sg36
g4
sg37
(lp757
g1
(g39
g3
NtRp758
(dp759
g20
Nsg8
g42
sg10
S'windowID'
p760
sg44
Nsg13
Nsg45
S'None'
p761
sg47
I1
sS'q'
g49
sg36
g751
sg37
(lp762
sg54
g1
(g55
g3
NtRp763
(dp764
g58
Nsg59
g758
sg60
g62
sbsg601
Nsg602
Nsg603
g605
sg60
g1
(g608
g609
(dp765
g611
g1
(g612
g3
NtRp766
(dp767
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp768
(dp769
g615
S''
sg616
S''
sg13
NsbstRp770
(dp771
g622
(lp772
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp773
(dp774
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g751
sg60
g62
sbsg730
(lp775
sg60
g1
(g608
g609
(dp776
g733
g1
(g612
g3
NtRp777
(dp778
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp779
(dp780
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp781
(dp782
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp783
(dp784
g615
g745
sg616
g745
sg13
NsbstRp785
(dp786
g622
(lp787
g733
ag736
ag739
ag742
asbsg749
(lp788
g758
asbag1
(g16
g3
NtRp789
(dp790
g19
Nsg20
Nsg8
g21
sg10
S'WindowFilter'
p791
sg23
Nsg13
Nsg29
(dp792
sg31
(lp793
sg33
I00
sg34
(lp794
sg36
g4
sg37
(lp795
g1
(g39
g3
NtRp796
(dp797
g20
Nsg8
g42
sg10
S'clearFilter'
p798
sg44
I00
sg13
g1
(g24
g3
NtRp799
(dp800
g27
S"Clears the list of included and excluded ID's before modifying them.\nDoes not touch window type filter.\n"
p801
sbsg45
S'false'
p802
sg47
I1
sS'q'
g49
sg36
g789
sg37
(lp803
sg54
g1
(g55
g3
NtRp804
(dp805
g58
Nsg59
g796
sg60
g62
sbsg601
I00
sg602
Nsg603
g709
sg60
g1
(g608
g609
(dp806
g611
g1
(g612
g3
NtRp807
(dp808
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp809
(dp810
g615
S''
sg616
S''
sg13
NsbstRp811
(dp812
g622
(lp813
g611
ag617
asbsbag1
(g39
g3
NtRp814
(dp815
g20
Nsg8
g42
sg10
S'includeIDList'
p816
sg44
Nsg13
Nsg45
S'None'
p817
sg47
I2
sS'q'
g1
(g48
g3
NtRp818
(dp819
g51
I3
sg10
S'repeated'
p820
sbsg36
g789
sg37
(lp821
sg54
g1
(g55
g3
NtRp822
(dp823
g58
Nsg59
g814
sg60
g62
sbsg601
Nsg602
Nsg603
g605
sg60
g1
(g608
g609
(dp824
g611
g1
(g612
g3
NtRp825
(dp826
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp827
(dp828
g615
S''
sg616
S''
sg13
NsbstRp829
(dp830
g622
(lp831
g611
ag617
asbsbag1
(g39
g3
NtRp832
(dp833
g20
Nsg8
g42
sg10
S'includePatternList'
p834
sg44
Nsg13
g1
(g24
g3
NtRp835
(dp836
g27
S'The string can currently only have one value: `"*"`, meaning all window-ids.\nThe filter automatically includes windows that are opened from windows\nin the INCLUDE filter.\n'
p837
sbsg45
S'None'
p838
sg47
I3
sS'q'
g818
sg36
g789
sg37
(lp839
sg54
g1
(g55
g3
NtRp840
(dp841
g58
Nsg59
g832
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp842
g611
g1
(g612
g3
NtRp843
(dp844
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp845
(dp846
g615
S''
sg616
S''
sg13
NsbstRp847
(dp848
g622
(lp849
g611
ag617
asbsbag1
(g39
g3
NtRp850
(dp851
g20
Nsg8
g42
sg10
S'excludeIDList'
p852
sg44
Nsg13
Nsg45
S'None'
p853
sg47
I4
sS'q'
g818
sg36
g789
sg37
(lp854
sg54
g1
(g55
g3
NtRp855
(dp856
g58
Nsg59
g850
sg60
g62
sbsg601
Nsg602
Nsg603
g605
sg60
g1
(g608
g609
(dp857
g611
g1
(g612
g3
NtRp858
(dp859
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp860
(dp861
g615
S''
sg616
S''
sg13
NsbstRp862
(dp863
g622
(lp864
g611
ag617
asbsbag1
(g39
g3
NtRp865
(dp866
g20
Nsg8
g42
sg10
S'excludePatternList'
p867
sg44
Nsg13
Nsg45
S'None'
p868
sg47
I5
sS'q'
g818
sg36
g789
sg37
(lp869
sg54
g1
(g55
g3
NtRp870
(dp871
g58
Nsg59
g865
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp872
g611
g1
(g612
g3
NtRp873
(dp874
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp875
(dp876
g615
S''
sg616
S''
sg13
NsbstRp877
(dp878
g622
(lp879
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp880
(dp881
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g789
sg60
g62
sbsg730
(lp882
sg60
g1
(g608
g609
(dp883
g733
g1
(g612
g3
NtRp884
(dp885
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp886
(dp887
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp888
(dp889
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp890
(dp891
g615
g745
sg616
g745
sg13
NsbstRp892
(dp893
g622
(lp894
g733
ag736
ag739
ag742
asbsg749
(lp895
g796
ag814
ag832
ag850
ag865
asbag1
(g16
g3
NtRp896
(dp897
g19
Nsg20
Nsg8
g21
sg10
S'WindowList'
p898
sg23
Nsg13
Nsg29
(dp899
sg31
(lp900
sg33
I00
sg34
(lp901
sg36
g4
sg37
(lp902
g1
(g39
g3
NtRp903
(dp904
g20
Nsg8
g42
sg10
S'windowList'
p905
sg44
Nsg13
Nsg45
S'None'
p906
sg47
I1
sS'q'
g818
sg36
g896
sg37
(lp907
sg54
g1
(g55
g3
NtRp908
(dp909
g58
Nsg59
g903
sg60
g62
sbsg601
Nsg602
g17
sg603
g1
(g604
g3
NtRp910
(dp911
g51
I16
sg10
g602
sbsg60
g1
(g608
g609
(dp912
g611
g1
(g612
g3
NtRp913
(dp914
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp915
(dp916
g615
S''
sg616
S''
sg13
NsbstRp917
(dp918
g622
(lp919
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp920
(dp921
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g896
sg60
g62
sbsg730
(lp922
sg60
g1
(g608
g609
(dp923
g733
g1
(g612
g3
NtRp924
(dp925
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp926
(dp927
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp928
(dp929
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp930
(dp931
g615
g745
sg616
g745
sg13
NsbstRp932
(dp933
g622
(lp934
g733
ag736
ag739
ag742
asbsg749
(lp935
g903
asbag1
(g16
g3
NtRp936
(dp937
g19
Nsg20
Nsg8
g21
sg10
S'CreateWindowArg'
p938
sg23
Nsg13
Nsg29
(dp939
sg31
(lp940
sg33
I00
sg34
(lp941
sg36
g4
sg37
(lp942
g1
(g39
g3
NtRp943
(dp944
g20
Nsg8
g42
sg10
S'windowType'
p945
sg44
Nsg13
g1
(g24
g3
NtRp946
(dp947
g27
S'Type is one of:\n- "normal"\n- "download"\n- "cache"\n- "plugins"\n- "history"\n- "help"\n- "mail_view"\n- "mail_compose"\n- "newsfeed_view"\n- "ad"\n- "im_view"\n- "p2p_view"\n- "brand_view"\n- "print_selection"\n- "js_console"\n- "gadget"\n- "controller"\n- "info"\n- "dialog"\n- "thumbnail"\n- "normal_hidden"\n- "devtools"\n'
p948
sbsg45
S'None'
p949
sg47
I1
sS'q'
g685
sg36
g936
sg37
(lp950
sg54
g1
(g55
g3
NtRp951
(dp952
g58
Nsg59
g943
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp953
g611
g1
(g612
g3
NtRp954
(dp955
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp956
(dp957
g615
S''
sg616
S''
sg13
NsbstRp958
(dp959
g622
(lp960
g611
ag617
asbsbag1
(g39
g3
NtRp961
(dp962
g20
Nsg8
g42
sg10
S'isPrivate'
p963
sg44
Nsg13
g1
(g24
g3
NtRp964
(dp965
g27
S'If set then it forces Privacy Mode of a window\nelse the default setting will be used.\n@since 2.3\n'
p966
sbsg45
S'None'
p967
sg47
I2
sS'q'
g685
sg36
g936
sg37
(lp968
sg54
g1
(g55
g3
NtRp969
(dp970
g58
Nsg59
g961
sg60
g62
sbsg601
Nsg602
Nsg603
g709
sg60
g1
(g608
g609
(dp971
g611
g1
(g612
g3
NtRp972
(dp973
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp974
(dp975
g615
S''
sg616
S''
sg13
NsbstRp976
(dp977
g622
(lp978
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp979
(dp980
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g936
sg60
g62
sbsg730
(lp981
sg60
g1
(g608
g609
(dp982
g733
g1
(g612
g3
NtRp983
(dp984
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp985
(dp986
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp987
(dp988
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp989
(dp990
g615
g745
sg616
g745
sg13
NsbstRp991
(dp992
g622
(lp993
g733
ag736
ag739
ag742
asbsg749
(lp994
g943
ag961
asbag1
(g16
g3
NtRp995
(dp996
g19
Nsg20
Nsg8
g21
sg10
S'CloseWindowArg'
p997
sg23
Nsg13
Nsg29
(dp998
sg31
(lp999
sg33
I00
sg34
(lp1000
sg36
g4
sg37
(lp1001
g1
(g39
g3
NtRp1002
(dp1003
g20
Nsg8
g42
sg10
S'windowID'
p1004
sg44
Nsg13
g1
(g24
g3
NtRp1005
(dp1006
g27
S'Close window with the specified ID. If a window with that ID does\nnot exist, an error is returned.\n'
p1007
sbsg45
S'None'
p1008
sg47
I1
sS'q'
g49
sg36
g995
sg37
(lp1009
sg54
g1
(g55
g3
NtRp1010
(dp1011
g58
Nsg59
g1002
sg60
g62
sbsg601
Nsg602
Nsg603
g605
sg60
g1
(g608
g609
(dp1012
g611
g1
(g612
g3
NtRp1013
(dp1014
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp1015
(dp1016
g615
S''
sg616
S''
sg13
NsbstRp1017
(dp1018
g622
(lp1019
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp1020
(dp1021
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g995
sg60
g62
sbsg730
(lp1022
sg60
g1
(g608
g609
(dp1023
g733
g1
(g612
g3
NtRp1024
(dp1025
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp1026
(dp1027
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp1028
(dp1029
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp1030
(dp1031
g615
g745
sg616
g745
sg13
NsbstRp1032
(dp1033
g622
(lp1034
g733
ag736
ag739
ag742
asbsg749
(lp1035
g1002
asbag1
(g16
g3
NtRp1036
(dp1037
g19
Nsg20
Nsg8
g21
sg10
S'OpenURLArg'
p1038
sg23
Nsg13
Nsg29
(dp1039
sg31
(lp1040
sg33
I00
sg34
(lp1041
sg36
g4
sg37
(lp1042
g1
(g39
g3
NtRp1043
(dp1044
g20
Nsg8
g42
sg10
S'windowID'
p1045
sg44
Nsg13
g1
(g24
g3
NtRp1046
(dp1047
g27
S'Start loading the URL in this Window.\n'
p1048
sbsg45
S'None'
p1049
sg47
I1
sS'q'
g49
sg36
g1036
sg37
(lp1050
sg54
g1
(g55
g3
NtRp1051
(dp1052
g58
Nsg59
g1043
sg60
g62
sbsg601
Nsg602
Nsg603
g605
sg60
g1
(g608
g609
(dp1053
g611
g1
(g612
g3
NtRp1054
(dp1055
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp1056
(dp1057
g615
S''
sg616
S''
sg13
NsbstRp1058
(dp1059
g622
(lp1060
g611
ag617
asbsbag1
(g39
g3
NtRp1061
(dp1062
g20
Nsg8
g42
sg10
S'url'
p1063
sg44
Nsg13
g1
(g24
g3
NtRp1064
(dp1065
g27
S'The URL to load.\n'
p1066
sbsg45
S'None'
p1067
sg47
I2
sS'q'
g49
sg36
g1036
sg37
(lp1068
sg54
g1
(g55
g3
NtRp1069
(dp1070
g58
Nsg59
g1061
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp1071
g611
g1
(g612
g3
NtRp1072
(dp1073
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp1074
(dp1075
g615
S''
sg616
S''
sg13
NsbstRp1076
(dp1077
g622
(lp1078
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp1079
(dp1080
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g1036
sg60
g62
sbsg730
(lp1081
sg60
g1
(g608
g609
(dp1082
g733
g1
(g612
g3
NtRp1083
(dp1084
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp1085
(dp1086
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp1087
(dp1088
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp1089
(dp1090
g615
g745
sg616
g745
sg13
NsbstRp1091
(dp1092
g622
(lp1093
g733
ag736
ag739
ag742
asbsg749
(lp1094
g1043
ag1061
asbag1
(g16
g3
NtRp1095
(dp1096
g19
Nsg20
Nsg8
g21
sg10
S'ModifyTypeFilterArg'
p1097
sg23
Nsg13
Nsg29
(dp1098
sg31
(lp1099
sg33
I00
sg34
(lp1100
sg36
g4
sg37
(lp1101
g1
(g39
g3
NtRp1102
(dp1103
g20
Nsg8
g42
sg10
S'mode'
p1104
sg44
Nsg13
g1
(g24
g3
NtRp1105
(dp1106
g27
S'Possible values:\n\n - "replace" clears the current filter, and replaces it with the input values.\n - "append" adds the input values to the current filter. It is acceptable to\n   add a value already present in the filter (silent fail).\n - "default" resets the filter to its defaults. The input values are ignored.\n   The default is ["normal_hidden", "devtools"].\n'
p1107
sbsg45
S'None'
p1108
sg47
I2
sS'q'
g49
sg36
g1095
sg37
(lp1109
sg54
g1
(g55
g3
NtRp1110
(dp1111
g58
Nsg59
g1102
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp1112
g611
g1
(g612
g3
NtRp1113
(dp1114
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp1115
(dp1116
g615
S''
sg616
S''
sg13
NsbstRp1117
(dp1118
g622
(lp1119
g611
ag617
asbsbag1
(g39
g3
NtRp1120
(dp1121
g20
Nsg8
g42
sg10
S'typeList'
p1122
sg44
Nsg13
g1
(g24
g3
NtRp1123
(dp1124
g27
S'A list of window types to exclude. For valid window types, see CreateWindowArg.\n'
p1125
sbsg45
S'None'
p1126
sg47
I1
sS'q'
g818
sg36
g1095
sg37
(lp1127
sg54
g1
(g55
g3
NtRp1128
(dp1129
g58
Nsg59
g1120
sg60
g62
sbsg601
Nsg602
Nsg603
g631
sg60
g1
(g608
g609
(dp1130
g611
g1
(g612
g3
NtRp1131
(dp1132
g615
S''
sg616
S''
sg13
Nsbsg617
g1
(g612
g3
NtRp1133
(dp1134
g615
S''
sg616
S''
sg13
NsbstRp1135
(dp1136
g622
(lp1137
g611
ag617
asbsbasg54
g1
(g720
g3
NtRp1138
(dp1139
g723
Nsg724
I1
sg725
Nsg726
Nsg727
Nsg728
Nsg729
Nsg602
g1095
sg60
g62
sbsg730
(lp1140
sg60
g1
(g608
g609
(dp1141
g733
g1
(g612
g3
NtRp1142
(dp1143
g615
S''
sg616
S''
sg13
Nsbsg736
g1
(g612
g3
NtRp1144
(dp1145
g615
S''
sg616
S''
sg13
Nsbsg739
g1
(g612
g3
NtRp1146
(dp1147
g615
S''
sg616
S''
sg13
Nsbsg742
g1
(g612
g3
NtRp1148
(dp1149
g615
g745
sg616
g745
sg13
NsbstRp1150
(dp1151
g622
(lp1152
g733
ag736
ag739
ag742
asbsg749
(lp1153
g1102
ag1120
asbasS'filename'
p1154
S'/home/baka/Build/browser/modules/scope/services/window_manager/window_manager.proto'
p1155
sS'imports'
p1156
(lp1157
sg54
g1
(ccppgen.cpp
CppPackageBuilder
p1158
g3
NtRp1159
(dp1160
S'descriptorID'
p1161
S'desc_scope_window_manager'
p1162
sS'_services'
p1163
NsS'package'
p1164
g4
sS'_opMessageSet'
p1165
NsS'is_built'
p1166
I00
sS'basename'
p1167
S'window_manager'
p1168
sS'useOpMessageSet'
p1169
I00
sS'filenames'
p1170
(dp1171
S'opMessageImplementation'
p1172
S'modules/scope/src/generated/g_message_scope_window_manager.cpp'
p1173
sS'descriptorImplementation'
p1174
S'modules/scope/src/generated/g_proto_descriptor_scope_window_manager.cpp'
p1175
sS'messageImplementation'
p1176
S'modules/scope/src/generated/g_proto_scope_window_manager.cpp'
p1177
sS'descriptorDeclaration'
p1178
S'modules/scope/src/generated/g_proto_descriptor_scope_window_manager.h'
p1179
sS'messageDeclaration'
p1180
S'modules/scope/src/generated/g_proto_scope_window_manager.h'
p1181
sS'opMessageDeclaration'
p1182
S'modules/scope/src/generated/g_message_scope_window_manager.h'
p1183
ssS'_descriptor'
p1184
NsS'opMessagePrefix'
p1185
S'Op'
p1186
sS'prefix'
p1187
S''
sS'base'
p1188
S'OpScopeWindowManager'
p1189
sS'_messageSet'
p1190
Nsg725
Nsg60
g62
sS'opMessageSuffix'
p1191
g21
sbsg36
Nsg37
(lp1192
g17
ag1
(chob.proto
Service
p1193
g3
NtRp1194
(dp1195
S'commands'
p1196
(lp1197
g1
(chob.proto
Request
p1198
g3
NtRp1199
(dp1200
S'response'
p1201
g751
sg8
S'Method'
p1202
sg10
S'GetActiveWindow'
p1203
sg13
g1
(g24
g3
NtRp1204
(dp1205
g27
S'Request the currently active window.\n\nReturns 0 id if there is no active window.\n'
p1206
sbsg51
I1
sg36
g1194
sg37
(lp1207
sg602
g1
(g16
g3
NtRp1208
(dp1209
g19
Nsg20
Nsg8
g21
sg10
S'Default'
p1210
sg23
Nsg13
Nsg29
(dp1211
sg31
(lp1212
sg33
I00
sg34
(lp1213
sg36
Nsg37
(lp1214
sg730
(lp1215
sg60
g1
(g608
g609
(dtRp1216
(dp1217
g622
(lp1218
sbsg749
(lp1219
sbsg60
g1
(g608
g609
(dtRp1220
(dp1221
g622
(lp1222
sbsbag1
(g1198
g3
NtRp1223
(dp1224
g1201
g896
sg8
g1202
sg10
S'ListWindows'
p1225
sg13
Nsg51
I2
sg36
g1194
sg37
(lp1226
sg602
g1208
sg60
g1
(g608
g609
(dtRp1227
(dp1228
g622
(lp1229
sbsbag1
(g1198
g3
NtRp1230
(dp1231
g1201
g1208
sg8
g1202
sg10
S'ModifyFilter'
p1232
sg13
g1
(g24
g3
NtRp1233
(dp1234
g27
S'The default `WindowFilter` used to be `includePatternList` `"*"`.\nAfter this command was introduced, the default filter is `includeIDList` 0 (unknown).\n\nThe filtering mechanism works by taking the appropriate window-id of the message and checks it:\n\n  If the INCLUDE filter contains the window-id, or a window that has opened the window,\n  and the window-id is not in the EXCLUDE filter,\n     then send the message.\n  Otherwise,\n     discard the message\n\n`includeIDList` and `excludeIDList` appends to the existing filter. This is true whether these occur in the\nsame `ModifyFilter` command or occur in different `ModifyFilter` commands. If the `clearFilter` flag is present, the\nfilter will be cleared before the `includeIDList` and `excludeIDList` appends to the filter.\n\nTODO: Perhaps `WindowFilter` should work on window types as well?\n'
p1235
sbsg51
I3
sg36
g1194
sg37
(lp1236
sg602
g789
sg60
g1
(g608
g609
(dtRp1237
(dp1238
g622
(lp1239
sbsbag1
(chob.proto
Event
p1240
g3
NtRp1241
(dp1242
g8
g1202
sg10
S'OnWindowUpdated'
p1243
sg13
g1
(g24
g3
NtRp1244
(dp1245
g27
S'Sent every time there is a new window, or some window information changed.\n'
p1246
sbsg51
I4
sg36
g1194
sg37
(lp1247
sg602
g17
sg60
g1
(g608
g609
(dtRp1248
(dp1249
g622
(lp1250
sbsbag1
(g1240
g3
NtRp1251
(dp1252
g8
g1202
sg10
S'OnWindowClosed'
p1253
sg13
g1
(g24
g3
NtRp1254
(dp1255
g27
S'Sent when a window is closed.\n'
p1256
sbsg51
I5
sg36
g1194
sg37
(lp1257
sg602
g751
sg60
g1
(g608
g609
(dtRp1258
(dp1259
g622
(lp1260
sbsbag1
(g1240
g3
NtRp1261
(dp1262
g8
g1202
sg10
S'OnWindowActivated'
p1263
sg13
g1
(g24
g3
NtRp1264
(dp1265
g27
S'Sent whenever the active window is changed.\n'
p1266
sbsg51
I6
sg36
g1194
sg37
(lp1267
sg602
g751
sg60
g1
(g608
g609
(dtRp1268
(dp1269
g622
(lp1270
sbsbag1
(g1240
g3
NtRp1271
(dp1272
g8
g1202
sg10
S'OnWindowLoaded'
p1273
sg13
g1
(g24
g3
NtRp1274
(dp1275
g27
S'Sent whenever a window has finished loading. This\nevent happens after external resources are loaded.\nNote: if the page uses scripting to dynamically change the page or load more data, this event may occur\n      multiple times for the same window.\n'
p1276
sbsg51
I7
sg36
g1194
sg37
(lp1277
sg602
g751
sg60
g1
(g608
g609
(dtRp1278
(dp1279
g622
(lp1280
sbsbag1
(g1198
g3
NtRp1281
(dp1282
g1201
g751
sg8
g1202
sg10
S'CreateWindow'
p1283
sg13
g1
(g24
g3
NtRp1284
(dp1285
g27
S'Create a new window, and (if successful) return its ID.\n'
p1286
sbsg51
I8
sg36
g1194
sg37
(lp1287
sg602
g936
sg60
g1
(g608
g609
(dtRp1288
(dp1289
g622
(lp1290
sbsbag1
(g1198
g3
NtRp1291
(dp1292
g1201
g1208
sg8
g1202
sg10
S'CloseWindow'
p1293
sg13
g1
(g24
g3
NtRp1294
(dp1295
g27
S'Request the closing of a specific window. Window closing is asynchronous, and your\nrequest may be silently ignored or denied. If the Window actually was closed, then\nan OnWindowClosed event will fire.\n\nAttempting to close a non-existent window will trigger an error.\n'
p1296
sbsg51
I9
sg36
g1194
sg37
(lp1297
sg602
g995
sg60
g1
(g608
g609
(dtRp1298
(dp1299
g622
(lp1300
sbsbag1
(g1198
g3
NtRp1301
(dp1302
g1201
g1208
sg8
g1202
sg10
S'OpenURL'
p1303
sg13
g1
(g24
g3
NtRp1304
(dp1305
g27
S'Open a URL in the the specified Window, and start loading.\n'
p1306
sbsg51
I10
sg36
g1194
sg37
(lp1307
sg602
g1036
sg60
g1
(g608
g609
(dtRp1308
(dp1309
g622
(lp1310
sbsbag1
(g1198
g3
NtRp1311
(dp1312
g1201
g1208
sg8
g1202
sg10
S'ModifyTypeFilter'
p1313
sg13
g1
(g24
g3
NtRp1314
(dp1315
g27
S'The type filter lets you exclude certain window types completely.\n'
p1316
sbsg51
I11
sg36
g1194
sg37
(lp1317
sg602
g1095
sg60
g1
(g608
g609
(dtRp1318
(dp1319
g622
(lp1320
sbsbasg8
S'Service'
p1321
sg10
S'WindowManager'
p1322
sg13
g1
(g24
g3
NtRp1323
(dp1324
g27
S"We want to be able to work with windows on a higher level than before. One important goal is to opt-in on the messages you\nget instead of being flooded.\n\nDiscussion\n----------\n\nThis protocol will prevent a lot of flooding from the other services, but it will on the other hand flood a bit itself.\nThere is no way to stop it from sending `OnWindowActivated` messages for example.\n\nWhen Opera Dragonfly is used to debug on the desktop, it probably doesn't want to use this service at all, but just have\nthe filters automatically set to include the active window. We might cater for this later. The way to do it with the current\nprotocol would be to retrieve the active window and put that in the include filter manually. However the active window might\nhave changed by the time Opera Dragonfly gets to do that. Additionally, we would like Opera Dragonfly to start with a certain\nDOM node selected. I see no other way than adding some C++ hooks to do this when debugging locally.\n"
p1325
sbsg36
g4
sg37
(lp1326
g1199
ag1223
ag1230
ag1241
ag1251
ag1261
ag1271
ag1281
ag1291
ag1301
ag1311
asg54
g1
(ccppgen.cpp
CppServiceBuilder
p1327
g3
NtRp1328
(dp1329
g60
g62
sS'service'
p1330
g1194
sg1170
(dp1331
S'generatedServiceImplementation'
p1332
S'modules/scope/src/generated/g_scope_window_manager_interface.cpp'
p1333
sS'serviceDeclaration'
p1334
S'modules/scope/src/scope_window_manager.h'
p1335
sS'serviceImplementation'
p1336
S'modules/scope/src/scope_window_manager.cpp'
p1337
sS'generatedServiceDeclaration'
p1338
S'modules/scope/src/generated/g_scope_window_manager_interface.h'
p1339
ssbsg60
g1
(g608
g609
(dp1340
S'cpp_generate'
p1341
g1
(g612
g3
NtRp1342
(dp1343
g615
S'true'
p1344
sg616
g1344
sg13
NsbsS'cpp_base'
p1345
g1
(g612
g3
NtRp1346
(dp1347
g615
S'modules/scope'
p1348
sg616
g1348
sg13
NsbsS'cpp_class'
p1349
g1
(g612
g3
NtRp1350
(dp1351
g615
g1189
sg616
g1189
sg13
NsbsS'cpp_hfile'
p1352
g1
(g612
g3
NtRp1353
(dp1354
g615
S'"modules/scope/src/scope_window_manager.h"'
p1355
sg616
S'modules/scope/src/scope_window_manager.h'
p1356
sg13
NsbsS'cpp_file'
p1357
g1
(g612
g3
NtRp1358
(dp1359
g615
S'scope_window_manager'
p1360
sg616
g1360
sg13
NsbsS'version'
p1361
g1
(g612
g3
NtRp1362
(dp1363
g615
S'"2.3"'
p1364
sg616
S'2.3'
p1365
sg13
NsbsS'cpp_src_base'
p1366
g1
(g612
g3
NtRp1367
(dp1368
g615
S'modules/scope/src'
p1369
sg616
g1369
sg13
NsbsS'cpp_gen_base'
p1370
g1
(g612
g3
NtRp1371
(dp1372
g615
S'modules/scope/src/generated'
p1373
sg616
g1373
sg13
NsbsS'cpp_feature'
p1374
g1
(g612
g3
NtRp1375
(dp1376
g615
S'SCOPE_WINDOW_MANAGER_SUPPORT'
p1377
sg616
g1377
sg13
NsbstRp1378
(dp1379
g622
(lp1380
g1352
ag1361
ag1349
ag1370
ag1341
ag1366
ag1345
ag1357
aS'cpp_class'
p1381
ag1374
asbsbag751
ag789
ag896
ag936
ag995
ag1036
ag1095
asS'services'
p1382
(lp1383
g1194
asg730
(lp1384
sg60
g1
(g608
g609
(dp1385
S'cpp_prefix'
p1386
g1
(g612
g3
NtRp1387
(dp1388
g615
S'OpScope'
p1389
sg616
g1389
sg13
Nsbsg733
g1
(g612
g3
NtRp1390
(dp1391
g615
S'False'
p1392
sg616
I00
sg13
Nsbsg736
g1
(g612
g3
NtRp1393
(dp1394
g615
g1186
sg616
g1186
sg13
Nsbsg739
g1
(g612
g3
NtRp1395
(dp1396
g615
g21
sg616
g21
sg13
NsbsS'cpp_opmessage_set'
p1397
g1
(g612
g3
NtRp1398
(dp1399
g615
g1392
sg616
I00
sg13
NsbstRp1400
(dp1401
g622
(lp1402
g1386
ag733
ag739
ag736
ag1397
asbsb.