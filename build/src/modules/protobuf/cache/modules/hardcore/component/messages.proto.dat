ccopy_reg
_reconstructor
p1
(chob.proto
Package
p2
c__builtin__
object
p3
NtRp4
(dp5
S'packages'
p6
(dp7
S''
g4
ssS'group'
p8
S'File'
p9
sS'name'
p10
S''
sS'_lookup'
p11
(dp12
sS'doc'
p13
NsS'messages'
p14
(lp15
g1
(chob.proto
Message
p16
g3
NtRp17
(dp18
S'parent'
p19
NsS'comment'
p20
Nsg8
S'Message'
p21
sg10
S'Status'
p22
sS'internal_id'
p23
Nsg13
g1
(chob.proto
DocBlock
p24
g3
NtRp25
(dp26
S'text'
p27
S'Opera Status message.\n\nThe intended use case is code performing an operation on behalf of a caller\nin another component, and simply returning the status will automagically\ncause a message of this type to be sent to the caller on the local channel.\n\nExample:\n@msc\nComponent1, Component2;\nComponent1 -> Component2\n   [label="1. SendMessage(SomeMessage::Create())",\n    url="\\ref OpComponent::SendMessage()"];\nComponent2 => Component2\n   [label="2. ProcessMessage()",\n    url="\\ref OpComponent::ProcessMessage()"];\nComponent2 -> Component1\n   [label="3. SendMessage(OpStatusMessage)",\n    url="\\ref OpComponent::SendMessage()"];\nComponent1 -> Component1\n   [label="4. ProcessMessage()",\n    url="\\ref OpComponent::ProcessMessage()"];\n@endmsc\n\n-# Component \\#1: sends some message to a remote component:\n   @code\n       OpComponent* remote_component = ...;\n       remote_component->SendMessage(OpDoSomethingMessage::Create());\n   @endcode\n-# Component \\#2: receives the message an handles it in\n   OpComponent::ProcessMessage() or OpMessageListener::ProcessMessage(). If\n   the handling method returns an error status on handling the message:\n   @code\n        switch (message->GetType()) {\n        case OpDoSomethingMessage::Type:\n           return OpStatus::ERR;\n        ...\n        }\n   @endcode\n-# Component \\#2: ... sends an OpStatusMessage with the return OP_STATUS\n   value back to the sender.\n-# Component \\#1: can then receive this message and handle it in its\n   OpMessageListener::ProcessMessage():\n   @code\n       switch (message->GetType()) {\n       case OpStatusMessage::Type:\n       {\n           OP_STATUS status = OpStatusMessage::Cast(message)->GetStatus();\n           // do something sensible with the status\n           ...\n           break;\n       }\n   @endcode\n\n\n'
p28
sbsS'fieldMap'
p29
(dp30
sS'children'
p31
(lp32
sS'is_extension'
p33
I00
sS'extensions'
p34
(lp35
sS'iparent'
p36
g4
sS'items'
p37
(lp38
g1
(chob.proto
Field
p39
g3
NtRp40
(dp41
g20
Nsg8
S'Field'
p42
sg10
S'status'
p43
sS'default'
p44
Nsg13
g1
(g24
g3
NtRp45
(dp46
g27
S'Numeric OP_STATUS code.'
p47
sbsS'default_text'
p48
S'None'
p49
sS'number'
p50
I1
sS'q'
g1
(chob.proto
QuantifierType
p51
g3
NtRp52
(dp53
S'id'
p54
I1
sg10
S'required'
p55
sbsg36
g17
sg37
(lp56
sS'cpp'
p57
g1
(ccppgen.cpp
CppFieldBuilder
p58
g3
NtRp59
(dp60
S'_ext'
p61
NsS'field'
p62
g40
sS'options'
p63
g1
(ccppgen.cpp
CppBuildOptions
p64
g3
NtRp65
(dp66
S'moduleType'
p67
S'modules'
p68
sS'moduleName'
p69
S'hardcore'
p70
sS'config'
p71
(iConfigParser
SafeConfigParser
p72
(dp73
S'_optcre'
p74
cre
_compile
p75
(S'(?P<option>[^:=\\s][^:=]*)\\s*(?P<vi>[:=])\\s*(?P<value>.*)$'
p76
I0
tRp77
sS'_defaults'
p78
ccollections
OrderedDict
p79
((ltRp80
sS'_sections'
p81
g79
((lp82
(lp83
S'MessageHandlerPtr.custom'
p84
ag79
((lp85
(lp86
S'__name__'
p87
ag84
aa(lp88
S'type'
p89
aS'MessageHandler*'
p90
aa(lp91
S'to'
p92
aS'((%(fieldTypeOuter)s)%(memberName)s)'
p93
aa(lp94
S'from'
p95
aS'((%(dataType)s)%(var)s)'
p96
aatRp97
aatRp98
sS'_dict'
p99
g79
sbsbsbsS'default_object'
p100
NsS'message'
p101
NsS'type'
p102
g1
(chob.proto
ProtoType
p103
g3
NtRp104
(dp105
g54
I1
sg10
S'int32'
p106
sbsg63
g1
(chob.proto
Options
p107
c__builtin__
dict
p108
(dp109
S'cpp_exttype'
p110
g1
(chob.proto
OptionValue
p111
g3
NtRp112
(dp113
S'raw'
p114
S'OP_STATUS'
p115
sS'value'
p116
g115
sg13
NsbsS'cpp_datatype'
p117
g1
(g111
g3
NtRp118
(dp119
g114
S''
sg116
S''
sg13
NsbstRp120
(dp121
S'ordered'
p122
(lp123
g110
ag117
asbsbasg57
g1
(ccppgen.cpp
CppMessageBuilder
p124
g3
NtRp125
(dp126
S'opMessageID'
p127
NsS'opMessageAlloc'
p128
I1
sS'_needsOpMessage'
p129
NsS'_typedef'
p130
NsS'_klass'
p131
NsS'_opMessageType'
p132
NsS'_opMessage'
p133
Nsg101
g17
sg63
g65
sbsS'enums'
p134
(lp135
sg63
g1
(g107
g108
(dp136
S'cpp_opmessage'
p137
g1
(g111
g3
NtRp138
(dp139
g114
S''
sg116
S''
sg13
NsbsS'cpp_opmessage_prefix'
p140
g1
(g111
g3
NtRp141
(dp142
g114
S''
sg116
S''
sg13
NsbsS'cpp_opmessage_suffix'
p143
g1
(g111
g3
NtRp144
(dp145
g114
S''
sg116
S''
sg13
NsbsS'cpp_opmessage_allocate'
p146
g1
(g111
g3
NtRp147
(dp148
g114
S'new'
p149
sg116
g149
sg13
NsbstRp150
(dp151
g122
(lp152
g137
ag140
ag143
ag146
asbsS'fields'
p153
(lp154
g40
asbag1
(g16
g3
NtRp155
(dp156
g19
Nsg20
Nsg8
g21
sg10
S'Text'
p157
sg23
Nsg13
g1
(g24
g3
NtRp158
(dp159
g27
S'Simple text message.\n\nUsed for testing.\n'
p160
sbsg29
(dp161
sg31
(lp162
sg33
I00
sg34
(lp163
sg36
g4
sg37
(lp164
g1
(g39
g3
NtRp165
(dp166
g20
Nsg8
g42
sg10
S'text'
p167
sg44
Nsg13
Nsg48
S'None'
p168
sg50
I1
sS'q'
g52
sg36
g155
sg37
(lp169
sg57
g1
(g58
g3
NtRp170
(dp171
g61
Nsg62
g165
sg63
g65
sbsg100
Nsg101
Nsg102
g1
(g103
g3
NtRp172
(dp173
g54
I14
sg10
S'string'
p174
sbsg63
g1
(g107
g108
(dp175
S'cpp_exttype'
p176
g1
(g111
g3
NtRp177
(dp178
g114
S''
sg116
S''
sg13
Nsbsg117
g1
(g111
g3
NtRp179
(dp180
g114
S'UniString'
p181
sg116
g181
sg13
NsbstRp182
(dp183
g122
(lp184
g176
ag117
ag117
asbsbasg57
g1
(g124
g3
NtRp185
(dp186
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g155
sg63
g65
sbsg134
(lp187
sg63
g1
(g107
g108
(dp188
g137
g1
(g111
g3
NtRp189
(dp190
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp191
(dp192
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp193
(dp194
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp195
(dp196
g114
g149
sg116
g149
sg13
NsbstRp197
(dp198
g122
(lp199
g137
ag140
ag143
ag146
asbsg153
(lp200
g165
asbag1
(g16
g3
NtRp201
(dp202
g19
Nsg20
Nsg8
g21
sg10
S'Number'
p203
sg23
Nsg13
g1
(g24
g3
NtRp204
(dp205
g27
S'Simple numeric message.\n\nUsed for testing.\n'
p206
sbsg29
(dp207
sg31
(lp208
sg33
I00
sg34
(lp209
sg36
g4
sg37
(lp210
g1
(g39
g3
NtRp211
(dp212
g20
Nsg8
g42
sg10
S'number'
p213
sg44
Nsg13
Nsg48
S'None'
p214
sg50
I1
sS'q'
g52
sg36
g201
sg37
(lp215
sg57
g1
(g58
g3
NtRp216
(dp217
g61
Nsg62
g211
sg63
g65
sbsg100
Nsg101
Nsg102
g1
(g103
g3
NtRp218
(dp219
g54
I6
sg10
S'int64'
p220
sbsg63
g1
(g107
g108
(dp221
g176
g1
(g111
g3
NtRp222
(dp223
g114
S''
sg116
S''
sg13
Nsbsg117
g1
(g111
g3
NtRp224
(dp225
g114
S''
sg116
S''
sg13
NsbstRp226
(dp227
g122
(lp228
g176
ag117
asbsbasg57
g1
(g124
g3
NtRp229
(dp230
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g201
sg63
g65
sbsg134
(lp231
sg63
g1
(g107
g108
(dp232
g137
g1
(g111
g3
NtRp233
(dp234
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp235
(dp236
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp237
(dp238
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp239
(dp240
g114
g149
sg116
g149
sg13
NsbstRp241
(dp242
g122
(lp243
g137
ag140
ag143
ag146
asbsg153
(lp244
g211
asbag1
(g16
g3
NtRp245
(dp246
g19
Nsg20
Nsg8
g21
sg10
S'ComponentManagerResponse'
p247
sg23
Nsg13
g1
(g24
g3
NtRp248
(dp249
g27
S'Component manager response message.\n\nUsed internally by the component infrastructure layer.\n'
p250
sbsg29
(dp251
sg31
(lp252
sg33
I00
sg34
(lp253
sg36
g4
sg37
(lp254
g1
(g39
g3
NtRp255
(dp256
g20
Nsg8
g42
sg10
S'request'
p257
sg44
Nsg13
g1
(g24
g3
NtRp258
(dp259
g27
S'Request identifier.'
p260
sbsg48
S'None'
p261
sg50
I1
sS'q'
g52
sg36
g245
sg37
(lp262
sg57
g1
(g58
g3
NtRp263
(dp264
g61
Nsg62
g255
sg63
g65
sbsg100
Nsg101
Nsg102
g104
sg63
g1
(g107
g108
(dp265
g176
g1
(g111
g3
NtRp266
(dp267
g114
S''
sg116
S''
sg13
Nsbsg117
g1
(g111
g3
NtRp268
(dp269
g114
S''
sg116
S''
sg13
NsbstRp270
(dp271
g122
(lp272
g176
ag117
asbsbag1
(g39
g3
NtRp273
(dp274
g20
Nsg8
g42
sg10
S'componentType'
p275
sg44
Nsg13
g1
(g24
g3
NtRp276
(dp277
g27
S'Type of component requested.'
p278
sbsg48
S'None'
p279
sg50
I2
sS'q'
g52
sg36
g245
sg37
(lp280
sg57
g1
(g58
g3
NtRp281
(dp282
g61
Nsg62
g273
sg63
g65
sbsg100
Nsg101
Nsg102
g104
sg63
g1
(g107
g108
(dp283
S'cpp_exttype'
p284
g1
(g111
g3
NtRp285
(dp286
g114
S'OpComponentType'
p287
sg116
g287
sg13
Nsbsg117
g1
(g111
g3
NtRp288
(dp289
g114
S''
sg116
S''
sg13
NsbstRp290
(dp291
g122
(lp292
g284
ag117
asbsbasg57
g1
(g124
g3
NtRp293
(dp294
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g245
sg63
g65
sbsg134
(lp295
sg63
g1
(g107
g108
(dp296
g137
g1
(g111
g3
NtRp297
(dp298
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp299
(dp300
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp301
(dp302
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp303
(dp304
g114
g149
sg116
g149
sg13
NsbstRp305
(dp306
g122
(lp307
g137
ag140
ag143
ag146
asbsg153
(lp308
g255
ag273
asbag1
(g16
g3
NtRp309
(dp310
g19
Nsg20
Nsg8
g21
sg10
S'ComponentRequest'
p311
sg23
Nsg13
g1
(g24
g3
NtRp312
(dp313
g27
S'Component request message.\n\nUsed internally by the component infrastructure layer. Sent from component\nwhere a request was made to the initial component manager.\n'
p314
sbsg29
(dp315
sg31
(lp316
sg33
I00
sg34
(lp317
sg36
g4
sg37
(lp318
g1
(g39
g3
NtRp319
(dp320
g20
Nsg8
g42
sg10
S'componentType'
p321
sg44
Nsg13
g1
(g24
g3
NtRp322
(dp323
g27
S'Type of component requested.'
p324
sbsg48
S'None'
p325
sg50
I1
sS'q'
g52
sg36
g309
sg37
(lp326
sg57
g1
(g58
g3
NtRp327
(dp328
g61
Nsg62
g319
sg63
g65
sbsg100
Nsg101
Nsg102
g104
sg63
g1
(g107
g108
(dp329
S'cpp_exttype'
p330
g1
(g111
g3
NtRp331
(dp332
g114
S'OpComponentType'
p333
sg116
g333
sg13
Nsbsg117
g1
(g111
g3
NtRp334
(dp335
g114
S''
sg116
S''
sg13
NsbstRp336
(dp337
g122
(lp338
g330
ag117
asbsbasg57
g1
(g124
g3
NtRp339
(dp340
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g309
sg63
g65
sbsg134
(lp341
sg63
g1
(g107
g108
(dp342
g137
g1
(g111
g3
NtRp343
(dp344
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp345
(dp346
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp347
(dp348
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp349
(dp350
g114
g149
sg116
g149
sg13
NsbstRp351
(dp352
g122
(lp353
g137
ag140
ag143
ag146
asbsg153
(lp354
g319
asbag1
(g16
g3
NtRp355
(dp356
g19
Nsg20
Nsg8
g21
sg10
S'PeerConnected'
p357
sg23
Nsg13
g1
(g24
g3
NtRp358
(dp359
g27
S'Message signalling that an entity is present and ready to communicate.\n\nUsed internally by the component infrastructure layer.\n\nDo NOT use this message for any other purpose. Channels receiving this\nmessage will update their internal records based on its origin, and\nthis may break communication paths.\n'
p360
sbsg29
(dp361
sg31
(lp362
sg33
I00
sg34
(lp363
sg36
g4
sg37
(lp364
sg57
g1
(g124
g3
NtRp365
(dp366
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g355
sg63
g65
sbsg134
(lp367
sg63
g1
(g107
g108
(dp368
g137
g1
(g111
g3
NtRp369
(dp370
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp371
(dp372
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp373
(dp374
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp375
(dp376
g114
g149
sg116
g149
sg13
NsbstRp377
(dp378
g122
(lp379
g137
ag140
ag143
ag146
asbsg153
(lp380
sbag1
(g16
g3
NtRp381
(dp382
g19
Nsg20
Nsg8
g21
sg10
S'PeerPending'
p383
sg23
Nsg13
g1
(g24
g3
NtRp384
(dp385
g27
S"Message to notify that a channel's peer is pending.\nThis message is sent to the OpChannel that is returned by\nOpComponent::RequestComponent(). The initial OpComponentManager sends it\nafter passing the corresponding OpComponentRequestMessage to the platform\n(see OpComponentPlatform::RequestPeer()). The source address of the message\nis the address of the destination OpComponentManager which will host the\nrequested OpComponent.\n@see OpComponent::RequestComponent()\n\nOn requesting a new OpComponent, the returned root channel to the new\ncomponent doesn't have a destination address yet. This message sets the\ndestination address of the root channel to the address of the destination\nOpComponentManager. If the OpComponentManager dies before creating the\nrequested component, the root channel will be notified by an\nOpPeerDisconnectedMessage.\n\n@note It is possible that the destination OpComponentManager creates the\n      requested OpComponent before this message is sent. In that case the\n      root channel will receive an OpPeerConnectedMessage before receiving\n      this message and this message will be ignored.\n\nThis message is used internally by the component framework.\n\nDo NOT use this message for any other purpose. Channels receiving this\nmessage will update their internal records based on its origin, and\nthis may break communication paths.\n"
p386
sbsg29
(dp387
sg31
(lp388
sg33
I00
sg34
(lp389
sg36
g4
sg37
(lp390
sg57
g1
(g124
g3
NtRp391
(dp392
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g381
sg63
g65
sbsg134
(lp393
sg63
g1
(g107
g108
(dp394
g137
g1
(g111
g3
NtRp395
(dp396
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp397
(dp398
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp399
(dp400
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp401
(dp402
g114
g149
sg116
g149
sg13
NsbstRp403
(dp404
g122
(lp405
g137
ag140
ag143
ag146
asbsg153
(lp406
sbag1
(g16
g3
NtRp407
(dp408
g19
Nsg20
Nsg8
g21
sg10
S'PeerDisconnected'
p409
sg23
Nsg13
g1
(g24
g3
NtRp410
(dp411
g27
S'Message to notify the disconnection of a channel.\n\nUsed internally by the component infrastructure layer.\n\nDo NOT use this message for any other purpose. Channels receiving this\nmessage will update their internal records based on its origin, and\nthis may break communication paths.\n'
p412
sbsg29
(dp413
sg31
(lp414
sg33
I00
sg34
(lp415
sg36
g4
sg37
(lp416
sg57
g1
(g124
g3
NtRp417
(dp418
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g407
sg63
g65
sbsg134
(lp419
sg63
g1
(g107
g108
(dp420
g137
g1
(g111
g3
NtRp421
(dp422
g114
S''
sg116
S''
sg13
Nsbsg140
g1
(g111
g3
NtRp423
(dp424
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp425
(dp426
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp427
(dp428
g114
g149
sg116
g149
sg13
NsbstRp429
(dp430
g122
(lp431
g137
ag140
ag143
ag146
asbsg153
(lp432
sbag1
(g16
g3
NtRp433
(dp434
g19
Nsg20
Nsg8
g21
sg10
S'MessageAddress'
p435
sg23
Nsg13
g1
(g24
g3
NtRp436
(dp437
g27
S'OpMessageAddress representation.\n\n- Component Manager ID: SetManager(), GetManager().\n- Manager-local component ID: SetComponent(), GetComponent().\n- Component-local channel ID: SetChannel(), GetChannel().\n'
p438
sbsg29
(dp439
sg31
(lp440
sg33
I00
sg34
(lp441
sg36
g4
sg37
(lp442
g1
(g39
g3
NtRp443
(dp444
g20
Nsg8
g42
sg10
S'manager'
p445
sg44
Nsg13
Nsg48
S'None'
p446
sg50
I1
sS'q'
g52
sg36
g433
sg37
(lp447
sg57
g1
(g58
g3
NtRp448
(dp449
g61
Nsg62
g443
sg63
g65
sbsg100
Nsg101
Nsg102
g104
sg63
g1
(g107
g108
(dp450
g176
g1
(g111
g3
NtRp451
(dp452
g114
S''
sg116
S''
sg13
Nsbsg117
g1
(g111
g3
NtRp453
(dp454
g114
S''
sg116
S''
sg13
NsbstRp455
(dp456
g122
(lp457
g176
ag117
asbsbag1
(g39
g3
NtRp458
(dp459
g20
Nsg8
g42
sg10
S'component'
p460
sg44
Nsg13
Nsg48
S'None'
p461
sg50
I2
sS'q'
g52
sg36
g433
sg37
(lp462
sg57
g1
(g58
g3
NtRp463
(dp464
g61
Nsg62
g458
sg63
g65
sbsg100
Nsg101
Nsg102
g104
sg63
g1
(g107
g108
(dp465
g176
g1
(g111
g3
NtRp466
(dp467
g114
S''
sg116
S''
sg13
Nsbsg117
g1
(g111
g3
NtRp468
(dp469
g114
S''
sg116
S''
sg13
NsbstRp470
(dp471
g122
(lp472
g176
ag117
asbsbag1
(g39
g3
NtRp473
(dp474
g20
Nsg8
g42
sg10
S'channel'
p475
sg44
Nsg13
Nsg48
S'None'
p476
sg50
I3
sS'q'
g52
sg36
g433
sg37
(lp477
sg57
g1
(g58
g3
NtRp478
(dp479
g61
Nsg62
g473
sg63
g65
sbsg100
Nsg101
Nsg102
g104
sg63
g1
(g107
g108
(dp480
g176
g1
(g111
g3
NtRp481
(dp482
g114
S''
sg116
S''
sg13
Nsbsg117
g1
(g111
g3
NtRp483
(dp484
g114
S''
sg116
S''
sg13
NsbstRp485
(dp486
g122
(lp487
g176
ag117
asbsbasg57
g1
(g124
g3
NtRp488
(dp489
g127
Nsg128
I1
sg129
Nsg130
Nsg131
Nsg132
Nsg133
Nsg101
g433
sg63
g65
sbsg134
(lp490
sg63
g1
(g107
g108
(dp491
S'cpp_opmessage'
p492
g1
(g111
g3
NtRp493
(dp494
g114
S'false'
p495
sg116
I00
sg13
Nsbsg140
g1
(g111
g3
NtRp496
(dp497
g114
S''
sg116
S''
sg13
Nsbsg143
g1
(g111
g3
NtRp498
(dp499
g114
S''
sg116
S''
sg13
Nsbsg146
g1
(g111
g3
NtRp500
(dp501
g114
g149
sg116
g149
sg13
NsbstRp502
(dp503
g122
(lp504
g492
ag140
ag143
ag146
asbsg153
(lp505
g443
ag458
ag473
asbasS'filename'
p506
S'/home/baka/Build/browser/modules/hardcore/component/messages.proto'
p507
sS'imports'
p508
(lp509
sg57
g1
(ccppgen.cpp
CppPackageBuilder
p510
g3
NtRp511
(dp512
S'descriptorID'
p513
S'desc_hardcore_messages'
p514
sS'_services'
p515
NsS'package'
p516
g4
sS'_opMessageSet'
p517
NsS'is_built'
p518
I00
sS'basename'
p519
S'messages'
p520
sS'useOpMessageSet'
p521
I00
sS'filenames'
p522
(dp523
S'opMessageImplementation'
p524
S'modules/hardcore/src/generated/g_message_hardcore_messages.cpp'
p525
sS'descriptorImplementation'
p526
S'modules/hardcore/src/generated/g_proto_descriptor_hardcore_messages.cpp'
p527
sS'messageImplementation'
p528
S'modules/hardcore/src/generated/g_proto_hardcore_messages.cpp'
p529
sS'descriptorDeclaration'
p530
S'modules/hardcore/src/generated/g_proto_descriptor_hardcore_messages.h'
p531
sS'messageDeclaration'
p532
S'modules/hardcore/src/generated/g_proto_hardcore_messages.h'
p533
sS'opMessageDeclaration'
p534
S'modules/hardcore/src/generated/g_message_hardcore_messages.h'
p535
ssS'_descriptor'
p536
NsS'opMessagePrefix'
p537
S'Op'
p538
sS'prefix'
p539
g538
sS'base'
p540
VHardcoreMessages
p541
sS'_messageSet'
p542
Nsg129
Nsg63
g65
sS'opMessageSuffix'
p543
g21
sbsg36
Nsg37
(lp544
g17
ag155
ag201
ag245
ag309
ag355
ag381
ag407
ag433
asS'services'
p545
(lp546
sg134
(lp547
sg63
g1
(g107
g108
(dp548
S'cpp_opmessage'
p549
g1
(g111
g3
NtRp550
(dp551
g114
S'true'
p552
sg116
I01
sg13
Nsbsg140
g1
(g111
g3
NtRp553
(dp554
g114
g538
sg116
g538
sg13
Nsbsg143
g1
(g111
g3
NtRp555
(dp556
g114
g21
sg116
g21
sg13
NsbsS'cpp_component'
p557
g1
(g111
g3
NtRp558
(dp559
g114
S'framework'
p560
sg116
g560
sg13
NsbsS'cpp_opmessage_set'
p561
g1
(g111
g3
NtRp562
(dp563
g114
S'False'
p564
sg116
I00
sg13
NsbstRp565
(dp566
g122
(lp567
g549
ag557
ag143
ag140
ag561
asbsb.