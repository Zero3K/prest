/*
 * curl.h - Minimal curl header for Opera autoupdate checker
 * 
 * This is a minimal implementation that provides the curl types and constants
 * needed by the Opera autoupdate checker networkimpl.cpp
 */

#ifndef __CURL_CURL_H
#define __CURL_CURL_H

#include <stddef.h>

#ifdef __cplusplus
extern "C" {
#endif

/* curl types */
typedef void CURL;
typedef void CURLSH;
typedef enum {
  CURLE_OK = 0,
  CURLE_UNSUPPORTED_PROTOCOL,
  CURLE_FAILED_INIT,
  CURLE_URL_MALFORMAT,
  CURLE_NOT_BUILT_IN,
  CURLE_COULDNT_RESOLVE_PROXY,
  CURLE_COULDNT_RESOLVE_HOST,
  CURLE_COULDNT_CONNECT,
  CURLE_WEIRD_SERVER_REPLY,
  CURLE_REMOTE_ACCESS_DENIED,
  CURLE_FTP_ACCEPT_FAILED,
  CURLE_FTP_WEIRD_USER_REPLY,
  CURLE_FTP_ACCEPT_TIMEOUT,
  CURLE_FTP_WEIRD_PASV_REPLY,
  CURLE_FTP_WEIRD_227_FORMAT,
  CURLE_FTP_CANT_GET_HOST,
  CURLE_HTTP2,
  CURLE_FTP_COULDNT_SET_TYPE,
  CURLE_PARTIAL_FILE,
  CURLE_FTP_COULDNT_RETR_FILE,
  CURLE_QUOTE_ERROR,
  CURLE_HTTP_RETURNED_ERROR,
  CURLE_WRITE_ERROR,
  CURLE_UPLOAD_FAILED,
  CURLE_READ_ERROR,
  CURLE_OUT_OF_MEMORY,
  CURLE_OPERATION_TIMEDOUT,
  CURLE_FTP_PORT_FAILED,
  CURLE_FTP_COULDNT_USE_REST,
  CURLE_RANGE_ERROR,
  CURLE_HTTP_POST_ERROR,
  CURLE_SSL_CONNECT_ERROR,
  CURLE_BAD_DOWNLOAD_RESUME,
  CURLE_FILE_COULDNT_READ_FILE,
  CURLE_LDAP_CANNOT_BIND,
  CURLE_LDAP_SEARCH_FAILED,
  CURLE_FUNCTION_NOT_FOUND,
  CURLE_ABORTED_BY_CALLBACK,
  CURLE_BAD_FUNCTION_ARGUMENT,
  CURLE_INTERFACE_FAILED,
  CURLE_TOO_MANY_REDIRECTS,
  CURLE_UNKNOWN_OPTION,
  CURLE_TELNET_OPTION_SYNTAX,
  CURLE_PEER_FAILED_VERIFICATION,
  CURLE_GOT_NOTHING,
  CURLE_SSL_ENGINE_NOTFOUND,
  CURLE_SSL_ENGINE_SETFAILED,
  CURLE_SEND_ERROR,
  CURLE_RECV_ERROR,
  CURLE_SSL_CERTPROBLEM,
  CURLE_SSL_CIPHER,
  CURLE_SSL_CACERT,
  CURLE_BAD_CONTENT_ENCODING,
  CURLE_LDAP_INVALID_URL,
  CURLE_FILESIZE_EXCEEDED,
  CURLE_USE_SSL_FAILED,
  CURLE_SEND_FAIL_REWIND,
  CURLE_SSL_ENGINE_INITFAILED,
  CURLE_LOGIN_DENIED,
  CURLE_TFTP_NOTFOUND,
  CURLE_TFTP_PERM,
  CURLE_REMOTE_DISK_FULL,
  CURLE_TFTP_ILLEGAL,
  CURLE_TFTP_UNKNOWNID,
  CURLE_REMOTE_FILE_EXISTS,
  CURLE_TFTP_NOSUCHUSER,
  CURLE_CONV_FAILED,
  CURLE_CONV_REQD,
  CURLE_SSL_CACERT_BADFILE,
  CURLE_REMOTE_FILE_NOT_FOUND,
  CURLE_SSH,
  CURLE_SSL_SHUTDOWN_FAILED,
  CURLE_AGAIN,
  CURLE_SSL_CRL_BADFILE,
  CURLE_SSL_ISSUER_ERROR,
  CURLE_FTP_PRET_FAILED,
  CURLE_RTSP_CSEQ_ERROR,
  CURLE_RTSP_SESSION_ERROR,
  CURLE_FTP_BAD_FILE_LIST,
  CURLE_CHUNK_FAILED,
  CURLE_NO_CONNECTION_AVAILABLE,
  CURLE_SSL_PINNEDPUBKEYNOTMATCH,
  CURLE_SSL_INVALIDCERTSTATUS,
  CURLE_HTTP2_STREAM,
  CURLE_RECURSIVE_API_CALL,
  CURL_LAST
} CURLcode;

typedef enum {
  CURLINFO_RESPONSE_CODE = 0x200000 + 2,
  CURLINFO_LASTONE = 60
} CURLINFO;

typedef enum {
  CURLOPT_WRITEDATA = 10000 + 1,
  CURLOPT_URL = 10000 + 2,
  CURLOPT_PORT = 0 + 3,
  CURLOPT_PROXY = 10000 + 4,
  CURLOPT_USERPWD = 10000 + 5,
  CURLOPT_PROXYUSERPWD = 10000 + 6,
  CURLOPT_RANGE = 10000 + 7,
  CURLOPT_READDATA = 10000 + 9,
  CURLOPT_ERRORBUFFER = 10000 + 10,
  CURLOPT_WRITEFUNCTION = 20000 + 11,
  CURLOPT_READFUNCTION = 20000 + 12,
  CURLOPT_TIMEOUT = 0 + 13,
  CURLOPT_INFILESIZE = 0 + 14,
  CURLOPT_POSTFIELDS = 10000 + 15,
  CURLOPT_REFERER = 10000 + 16,
  CURLOPT_FTPPORT = 10000 + 17,
  CURLOPT_USERAGENT = 10000 + 18,
  CURLOPT_LOW_SPEED_LIMIT = 0 + 19,
  CURLOPT_LOW_SPEED_TIME = 0 + 20,
  CURLOPT_RESUME_FROM = 0 + 21,
  CURLOPT_COOKIE = 10000 + 22,
  CURLOPT_HTTPHEADER = 10000 + 23,
  CURLOPT_HTTPPOST = 10000 + 24,
  CURLOPT_SSLCERT = 10000 + 25,
  CURLOPT_KEYPASSWD = 10000 + 26,
  CURLOPT_CRLF = 0 + 27,
  CURLOPT_QUOTE = 10000 + 28,
  CURLOPT_HEADERDATA = 10000 + 29,
  CURLOPT_COOKIEFILE = 10000 + 31,
  CURLOPT_SSLVERSION = 0 + 32,
  CURLOPT_TIMECONDITION = 0 + 33,
  CURLOPT_TIMEVALUE = 0 + 34,
  CURLOPT_CUSTOMREQUEST = 10000 + 36,
  CURLOPT_STDERR = 10000 + 37,
  CURLOPT_POSTQUOTE = 10000 + 39,
  CURLOPT_OBSOLETE40 = 10000 + 40,
  CURLOPT_VERBOSE = 0 + 41,
  CURLOPT_HEADER = 0 + 42,
  CURLOPT_NOPROGRESS = 0 + 43,
  CURLOPT_NOBODY = 0 + 44,
  CURLOPT_FAILONERROR = 0 + 45,
  CURLOPT_UPLOAD = 0 + 46,
  CURLOPT_POST = 0 + 47,
  CURLOPT_DIRLISTONLY = 0 + 48,
  CURLOPT_APPEND = 0 + 50,
  CURLOPT_NETRC = 0 + 51,
  CURLOPT_FOLLOWLOCATION = 0 + 52,
  CURLOPT_TRANSFERTEXT = 0 + 53,
  CURLOPT_PUT = 0 + 54,
  CURLOPT_PROGRESSFUNCTION = 20000 + 56,
  CURLOPT_PROGRESSDATA = 10000 + 57,
  CURLOPT_AUTOREFERER = 0 + 58,
  CURLOPT_PROXYPORT = 0 + 59,
  CURLOPT_POSTFIELDSIZE = 0 + 60,
  CURLOPT_HTTPPROXYTUNNEL = 0 + 61,
  CURLOPT_INTERFACE = 10000 + 62,
  CURLOPT_KRBLEVEL = 10000 + 63,
  CURLOPT_SSL_VERIFYPEER = 0 + 64,
  CURLOPT_CAINFO = 10000 + 65,
  CURLOPT_MAXREDIRS = 0 + 68,
  CURLOPT_FILETIME = 0 + 69,
  CURLOPT_TELNETOPTIONS = 10000 + 70,
  CURLOPT_MAXCONNECTS = 0 + 71,
  CURLOPT_OBSOLETE72 = 0 + 72,
  CURLOPT_FRESH_CONNECT = 0 + 74,
  CURLOPT_FORBID_REUSE = 0 + 75,
  CURLOPT_RANDOM_FILE = 10000 + 76,
  CURLOPT_EGDSOCKET = 10000 + 77,
  CURLOPT_CONNECTTIMEOUT = 0 + 78,
  CURLOPT_HEADERFUNCTION = 20000 + 79,
  CURLOPT_HTTPGET = 0 + 80,
  CURLOPT_SSL_VERIFYHOST = 0 + 81,
  CURLOPT_COOKIEJAR = 10000 + 82,
  CURLOPT_SSL_CIPHER_LIST = 10000 + 83,
  CURLOPT_HTTP_VERSION = 0 + 84,
  CURLOPT_FTP_USE_EPSV = 0 + 85,
  CURLOPT_SSLCERTTYPE = 10000 + 86,
  CURLOPT_SSLKEY = 10000 + 87,
  CURLOPT_SSLKEYTYPE = 10000 + 88,
  CURLOPT_SSLENGINE = 10000 + 89,
  CURLOPT_SSLENGINE_DEFAULT = 0 + 90,
  CURLOPT_DNS_USE_GLOBAL_CACHE = 0 + 91,
  CURLOPT_DNS_CACHE_TIMEOUT = 0 + 92,
  CURLOPT_PREQUOTE = 10000 + 93,
  CURLOPT_DEBUGFUNCTION = 20000 + 94,
  CURLOPT_DEBUGDATA = 10000 + 95,
  CURLOPT_COOKIESESSION = 0 + 96,
  CURLOPT_CAPATH = 10000 + 97,
  CURLOPT_BUFFERSIZE = 0 + 98,
  CURLOPT_NOSIGNAL = 0 + 99,
  CURLOPT_SHARE = 10000 + 100,
  CURLOPT_PROXYTYPE = 0 + 101,
  CURLOPT_ACCEPT_ENCODING = 10000 + 102,
  CURLOPT_PRIVATE = 10000 + 103,
  CURLOPT_HTTP200ALIASES = 10000 + 104,
  CURLOPT_UNRESTRICTED_AUTH = 0 + 105,
  CURLOPT_FTP_USE_EPRT = 0 + 106,
  CURLOPT_HTTPAUTH = 0 + 107,
  CURLOPT_SSL_CTX_FUNCTION = 20000 + 108,
  CURLOPT_SSL_CTX_DATA = 10000 + 109,
  CURLOPT_FTP_CREATE_MISSING_DIRS = 0 + 110,
  CURLOPT_PROXYAUTH = 0 + 111,
  CURLOPT_FTP_RESPONSE_TIMEOUT = 0 + 112,
  CURLOPT_IPRESOLVE = 0 + 113,
  CURLOPT_MAXFILESIZE = 0 + 114,
  CURLOPT_INFILESIZE_LARGE = 30000 + 115,
  CURLOPT_RESUME_FROM_LARGE = 30000 + 116,
  CURLOPT_MAXFILESIZE_LARGE = 30000 + 117,
  CURLOPT_NETRC_FILE = 10000 + 118,
  CURLOPT_USE_SSL = 0 + 119,
  CURLOPT_POSTFIELDSIZE_LARGE = 30000 + 120,
  CURLOPT_TCP_NODELAY = 0 + 121,
  CURLOPT_FTPSSLAUTH = 0 + 129,
  CURLOPT_IOCTLFUNCTION = 20000 + 130,
  CURLOPT_IOCTLDATA = 10000 + 131,
  CURLOPT_FTP_ACCOUNT = 10000 + 134,
  CURLOPT_COOKIELIST = 10000 + 135,
  CURLOPT_IGNORE_CONTENT_LENGTH = 0 + 136,
  CURLOPT_FTP_SKIP_PASV_IP = 0 + 137,
  CURLOPT_FTP_FILEMETHOD = 0 + 138,
  CURLOPT_LOCALPORT = 0 + 139,
  CURLOPT_LOCALPORTRANGE = 0 + 140,
  CURLOPT_CONNECT_ONLY = 0 + 141,
  CURLOPT_CONV_FROM_NETWORK_FUNCTION = 20000 + 142,
  CURLOPT_CONV_TO_NETWORK_FUNCTION = 20000 + 143,
  CURLOPT_CONV_FROM_UTF8_FUNCTION = 20000 + 144,
  CURLOPT_MAX_SEND_SPEED_LARGE = 30000 + 145,
  CURLOPT_MAX_RECV_SPEED_LARGE = 30000 + 146,
  CURLOPT_FTP_ALTERNATIVE_TO_USER = 10000 + 147,
  CURLOPT_SOCKOPTFUNCTION = 20000 + 148,
  CURLOPT_SOCKOPTDATA = 10000 + 149,
  CURLOPT_SSL_SESSIONID_CACHE = 0 + 150,
  CURLOPT_SSH_AUTH_TYPES = 0 + 151,
  CURLOPT_SSH_PUBLIC_KEYFILE = 10000 + 152,
  CURLOPT_SSH_PRIVATE_KEYFILE = 10000 + 153,
  CURLOPT_FTP_SSL_CCC = 0 + 154,
  CURLOPT_TIMEOUT_MS = 0 + 155,
  CURLOPT_CONNECTTIMEOUT_MS = 0 + 156,
  CURLOPT_HTTP_TRANSFER_DECODING = 0 + 157,
  CURLOPT_HTTP_CONTENT_DECODING = 0 + 158,
  CURLOPT_NEW_FILE_PERMS = 0 + 159,
  CURLOPT_NEW_DIRECTORY_PERMS = 0 + 160,
  CURLOPT_POSTREDIR = 0 + 161,
  CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 = 10000 + 162,
  CURLOPT_OPENSOCKETFUNCTION = 20000 + 163,
  CURLOPT_OPENSOCKETDATA = 10000 + 164,
  CURLOPT_COPYPOSTFIELDS = 10000 + 165,
  CURLOPT_PROXY_TRANSFER_MODE = 0 + 166,
  CURLOPT_SEEKFUNCTION = 20000 + 167,
  CURLOPT_SEEKDATA = 10000 + 168,
  CURLOPT_CRLFILE = 10000 + 169,
  CURLOPT_ISSUERCERT = 10000 + 170,
  CURLOPT_ADDRESS_SCOPE = 0 + 171,
  CURLOPT_CERTINFO = 0 + 172,
  CURLOPT_USERNAME = 10000 + 173,
  CURLOPT_PASSWORD = 10000 + 174,
  CURLOPT_PROXYUSERNAME = 10000 + 175,
  CURLOPT_PROXYPASSWORD = 10000 + 176,
  CURLOPT_NOPROXY = 10000 + 177,
  CURLOPT_TFTP_BLKSIZE = 0 + 178,
  CURLOPT_SOCKS5_GSSAPI_SERVICE = 10000 + 179,
  CURLOPT_SOCKS5_GSSAPI_NEC = 0 + 180,
  CURLOPT_PROTOCOLS = 0 + 181,
  CURLOPT_REDIR_PROTOCOLS = 0 + 182,
  CURLOPT_SSH_KNOWNHOSTS = 10000 + 183,
  CURLOPT_SSH_KEYFUNCTION = 20000 + 184,
  CURLOPT_SSH_KEYDATA = 10000 + 185,
  CURLOPT_MAIL_FROM = 10000 + 186,
  CURLOPT_MAIL_RCPT = 10000 + 187,
  CURLOPT_FTP_USE_PRET = 0 + 188,
  CURLOPT_RTSP_REQUEST = 0 + 189,
  CURLOPT_RTSP_SESSION_ID = 10000 + 190,
  CURLOPT_RTSP_STREAM_URI = 10000 + 191,
  CURLOPT_RTSP_TRANSPORT = 10000 + 192,
  CURLOPT_RTSP_CLIENT_CSEQ = 0 + 193,
  CURLOPT_RTSP_SERVER_CSEQ = 0 + 194,
  CURLOPT_INTERLEAVEDATA = 10000 + 195,
  CURLOPT_INTERLEAVEFUNCTION = 20000 + 196,
  CURLOPT_WILDCARDMATCH = 0 + 197,
  CURLOPT_CHUNK_BGN_FUNCTION = 20000 + 198,
  CURLOPT_CHUNK_END_FUNCTION = 20000 + 199,
  CURLOPT_CHUNK_DATA = 10000 + 200,
  CURLOPT_FNMATCH_FUNCTION = 20000 + 201,
  CURLOPT_FNMATCH_DATA = 10000 + 202,
  CURLOPT_RESOLVE = 10000 + 203,
  CURLOPT_TLSAUTH_USERNAME = 10000 + 204,
  CURLOPT_TLSAUTH_PASSWORD = 10000 + 205,
  CURLOPT_TLSAUTH_TYPE = 10000 + 206,
  CURLOPT_TRANSFER_ENCODING = 0 + 207,
  CURLOPT_CLOSESOCKETFUNCTION = 20000 + 208,
  CURLOPT_CLOSESOCKETDATA = 10000 + 209,
  CURLOPT_GSSAPI_DELEGATION = 0 + 210,
  CURLOPT_DNS_SERVERS = 10000 + 211,
  CURLOPT_ACCEPTTIMEOUT_MS = 0 + 212,
  CURLOPT_TCP_KEEPALIVE = 0 + 213,
  CURLOPT_TCP_KEEPIDLE = 0 + 214,
  CURLOPT_TCP_KEEPINTVL = 0 + 215,
  CURLOPT_SSL_OPTIONS = 0 + 216,
  CURLOPT_MAIL_AUTH = 10000 + 217,
  CURLOPT_SASL_IR = 0 + 218,
  CURLOPT_XFERINFOFUNCTION = 20000 + 219,
  CURLOPT_XFERINFODATA = 10000 + 220,
  CURLOPT_UNIX_SOCKET_PATH = 10000 + 221,
  CURLOPT_PATH_AS_IS = 0 + 222,
  CURLOPT_PROXYHEADER = 10000 + 223,
  CURLOPT_HEADEROPT = 0 + 224,
  CURLOPT_PINNEDPUBLICKEY = 10000 + 225,
  CURLOPT_LASTENTRY
} CURLoption;

typedef enum {
  CURLSHOPT_NONE,
  CURLSHOPT_SHARE,
  CURLSHOPT_UNSHARE,
  CURLSHOPT_LOCKFUNC,
  CURLSHOPT_UNLOCKFUNC,
  CURLSHOPT_USERDATA,
  CURLSHOPT_LAST
} CURLSHoption;

typedef enum {
  CURL_LOCK_DATA_NONE = 0,
  CURL_LOCK_DATA_SHARE,
  CURL_LOCK_DATA_COOKIE,
  CURL_LOCK_DATA_DNS,
  CURL_LOCK_DATA_SSL_SESSION,
  CURL_LOCK_DATA_CONNECT,
  CURL_LOCK_DATA_PSL,
  CURL_LOCK_DATA_LAST
} curl_lock_data;

/* Type definitions needed for compilation */
typedef long curl_off_t;
typedef size_t (*curl_write_callback)(char *buffer, size_t size, size_t nitems, void *userdata);

/* Constants needed by networkimpl.cpp */
#define CURL_GLOBAL_DEFAULT ((1<<0)|(1<<1))
#define CURL_REDIR_POST_ALL 0x0007

/* Function declarations that networkimpl.cpp uses */
CURLcode curl_global_init(long flags);
void curl_global_cleanup(void);
CURL *curl_easy_init(void);
void curl_easy_cleanup(CURL *curl);
CURLcode curl_easy_setopt(CURL *curl, CURLoption option, ...);
CURLcode curl_easy_perform(CURL *curl);
CURLcode curl_easy_getinfo(CURL *curl, CURLINFO info, ...);
CURLSH *curl_share_init(void);
CURLcode curl_share_setopt(CURLSH *sh, CURLSHoption option, ...);
CURLcode curl_share_cleanup(CURLSH *sh);

#ifdef __cplusplus
}
#endif

#endif /* __CURL_CURL_H */