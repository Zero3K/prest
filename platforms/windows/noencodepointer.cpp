// EncodePointer and DecodePointer functions (kernel32.dll) are not available
// in Win2k and WinXP without SP3, but builds generated by VS2010 depend
// on them (they are used by CRT code).
// This file provides implementations that use these functions if kernel32.dll
// has them and simply returns input argument on older systems.

#include "core/pch.h"
#include <windows.h>

// Function pointers for the actual EncodePointer/DecodePointer functions
static PVOID (WINAPI *RealEncodePointer)(PVOID) = nullptr;
static PVOID (WINAPI *RealDecodePointer)(PVOID) = nullptr;
static bool initialized = false;

// Simple implementation that just returns the input pointer
static PVOID WINAPI DummyEncodePointer(PVOID ptr) {
    return ptr;
}

static PVOID WINAPI DummyDecodePointer(PVOID ptr) {
    return ptr;
}

// Initialize the function pointers
static void InitializePointers() {
    if (initialized) return;
    
    // Set defaults to dummy implementations
    RealEncodePointer = DummyEncodePointer;
    RealDecodePointer = DummyDecodePointer;
    
    // Try to load the real functions from kernel32.dll
    HMODULE kernel32 = LoadLibraryA("KERNEL32.DLL");
    if (kernel32) {
        FARPROC encodeProc = GetProcAddress(kernel32, "EncodePointer");
        FARPROC decodeProc = GetProcAddress(kernel32, "DecodePointer");
        
        if (encodeProc && decodeProc) {
            RealEncodePointer = reinterpret_cast<PVOID(WINAPI*)(PVOID)>(encodeProc);
            RealDecodePointer = reinterpret_cast<PVOID(WINAPI*)(PVOID)>(decodeProc);
        }
        
        FreeLibrary(kernel32);
    }
    
    initialized = true;
}

// Export the functions that will be used by the CRT
extern "C" {
    PVOID WINAPI EncodePointer(PVOID ptr) {
        InitializePointers();
        return RealEncodePointer(ptr);
    }
    
    PVOID WINAPI DecodePointer(PVOID ptr) {
        InitializePointers();
        return RealDecodePointer(ptr);
    }
}

// Provide the import table symbols that the linker expects
// These are the symbols that the CRT will try to resolve
extern "C" {
    // These are function pointers that point to our implementations
    PVOID (WINAPI *__imp__EncodePointer@4)(PVOID) = EncodePointer;
    PVOID (WINAPI *__imp__DecodePointer@4)(PVOID) = DecodePointer;
}